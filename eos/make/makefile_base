# This is the makefile for the mesa equation of state library

MESA_DIR = ../..

#################################################################
#
# PREAMBLE

include $(MESA_DIR)/utils/makefile_header

#################################################################
#
# SOURCES

SRCS = \
   eos_def.f90 \
   eos_blend.f90 \
   create_FSCRliq8_table.f90 \
   create_EXCOR7_table.f90 \
   pc_support.f90 \
   pc_eos.f90 \
   ion_offset.f90 \
   helm_polynomials.f90 \
   ideal.f90 \
   skye_thermodynamics.f90 \
   skye_ideal.f90 \
   skye_coulomb_liquid.f90 \
   skye_coulomb_solid.f90 \
   skye_coulomb.f90 \
   skye.f90 \
   helm_alloc.f90 \
   helm.f90 \
   gauss_fermi.f90 \
   eosdt_load_tables.f90 \
   eoscms_eval.f90 \
   eospc_eval.f90 \
   eosdt_support.f90 \
   eos_helm_eval.f90 \
   eosdt_eval.f90 \
   eospt_eval.f90 \
   eosde_eval.f90 \
   eos_ctrls_io.f90 \
   eos_initialize.f90 \
   eos_lib.f90 \
   other_eos.f90

#################################################################
#
# LIBRARIES

ifeq ($(USE_SHARED), YES)
    LIBS_OTHER = chem $(LIBS_MESA_NUMERICS)
    DEPS_OTHER = $(patsubst %,$(MESA_LIB_DIR)/lib%.$(LIB_SUFFIX),$(LIBS_OTHER))
    LOAD_OTHER = -L$(MESA_LIB_DIR) -lchem $(LOAD_MESA_NUMERICS)
endif

#################################################################
#
# TARGETS

LIB = libeos.$(LIB_SUFFIX)

OBJS = $(patsubst %.f,%.o,$(patsubst %.f90,%.o,$(SRCS)))

$(LIB) : $(OBJS) $(DEPS_OTHER)
ifneq ($(QUIET),)
	@echo LIB_TOOL $(LIB)
	@$(LIB_TOOL) $(LIB) $(OBJS) $(LOAD_OTHER)
else
	$(LIB_TOOL) $(LIB) $(OBJS) $(LOAD_OTHER)
endif

clean:
	-@rm -f *.o *.mod *genmod.f90 *.a .depend *.so *.smod

install:
	@$(CP_IF_NEWER) eos_def.mod $(MESA_DIR)/include
	@$(CP_IF_NEWER) eos_lib.mod $(MESA_DIR)/include
	@$(CP_IF_NEWER) $(LIB) $(MESA_DIR)/lib

nodeps : $(.DEFAULT_GOAL)

#################################################################
#
# COMPILATION RULES

MOD_DEFAULTS_DIR = $(MODULE_DIR)/defaults
INCLUDE_DEFAULTS = -I$(MOD_DEFAULTS_DIR)

MOD_OTHER_DIR = $(MODULE_DIR)/other
INCLUDE_OTHER = -I$(MOD_OTHER_DIR)

MOD_INCLUDES = $(INCLUDE_DEFAULTS) $(INCLUDE_OTHER)

COMPILE = $(COMPILE_TO_DEPLOY) $(FCfree) $(MOD_INCLUDES)
#COMPILE = $(COMPILE_TO_TEST) $(FCfree) $(MOD_INCLUDES)

COMPILE_FIXED = $(COMPILE_TO_DEPLOY) $(FCfixed) $(MOD_INCLUDES)
#COMPILE_FIXED = $(COMPILE_TO_TEST) $(FCfixed) $(MOD_INCLUDES)

COMPILE_FIXED_LEGACY = $(filter-out -std=f2008, $(COMPILE_FIXED))

COMPILE_CMD = $(COMPILE)

%.o : %.mod

%.o : %.f
ifneq ($(QUIET),)
	@echo COMPILE_CMD $<
	@$(COMPILE_CMD) $<
else
	$(COMPILE_CMD) $<
endif

%.o : %.f90
ifneq ($(QUIET),)
	@echo COMPILE_CMD $<
	@$(COMPILE_CMD) $<
else
	$(COMPILE_CMD) $<
endif

%.mod : %.o
	@true

#################################################################
#
# DEPENDENCIES

SRC_PATH = $(MOD_PUBLIC_DIR):$(MOD_PRIVATE_DIR):$(MOD_OTHER_DIR)

vpath %.f $(SRC_PATH)
vpath %.f90 $(SRC_PATH)
vpath %.dek $(SRC_PATH)
vpath %.defaults $(SRC_PATH)

vpath %.mod $(MESA_DIR)/include

NODEPS = $(or $(filter nodeps,$(MAKECMDGOALS)),$(filter clean,$(MAKECMDGOALS)))

ifeq ($(NODEPS),)

  .depend :
  ifneq ($(QUIET),)
	@echo MAKEDEPF90
	@$(MAKEDEPF90) -I$(SRC_PATH) $(SRCS) > .depend
  else
	$(MAKEDEPF90) -I$(SRC_PATH) $(SRCS) > .depend
  endif

  -include .depend

endif
