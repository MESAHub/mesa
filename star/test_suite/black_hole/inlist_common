
&star_job
      show_log_description_at_start = .false.

      relax_to_this_tau_factor = 900
      dlogtau_factor = 0.1d0
      relax_initial_tau_factor = .true.

      auto_extend_net = .true.
      h_he_net = 'basic.net'
      co_net = 'co_burn.net'
      adv_net = 'approx21_cr60_plus_co56.net'
      
      set_rates_preference = .true.
      new_rates_preference = 2   ! 1 = nacre ; 2 = jina reaclib
      
      change_D_omega_flag = .true.
      new_D_omega_flag = .true.

      change_v_flag = .true.
      new_v_flag = .true.

      set_initial_age = .true.
      initial_age = 0

      set_initial_model_number = .true.
      initial_model_number = 0

      show_retry_counts_when_terminate = .true.
      show_timestep_limit_counts_when_terminate = .true.

/ ! end of star_job namelist

&eos
      PC_use_Gamma_limit_instead_of_T = .false.
/ ! end of eos namelist

&kap
      kap_file_prefix = 'a09'
      kap_CO_prefix   = 'a09_co'
      kap_lowT_prefix = 'lowT_fa05_a09p'
      use_Type2_opacities = .true.
/ ! end of kap namelist

&controls

! wind
      cool_wind_RGB_scheme = 'Dutch'
      cool_wind_AGB_scheme = 'Dutch'
      hot_wind_scheme = 'Dutch'
      Dutch_wind_lowT_scheme = 'de Jager'
      cool_wind_full_on_T = 0.8d4
      hot_wind_full_on_T = 1.2d4

      max_T_center_for_any_mass_loss = 1.1d9

! atmosphere
      Pextra_factor = 4 
      ! need this extra pressure to stabilize the atmosphere during core He burning

! rotation
      am_nu_visc_factor = 0
      am_D_mix_factor = 0.0333333333333333d00
      D_DSI_factor = 0
      D_SH_factor = 1
      D_SSI_factor = 1
      D_ES_factor = 1
      D_GSF_factor = 1
      D_ST_factor = 1

! mixing
      D_omega_mixing_rate = 1d0
      D_omega_mixing_across_convection_boundary = .false.

! mlt
      mixing_length_alpha = 1.5
      MLT_option = 'Henyey'

      use_Ledoux_criterion = .true.
      alpha_semiconvection = 0.01
      
      thermohaline_coeff = 2
      thermohaline_option = 'Kippenhahn'

      mlt_make_surface_no_mixing = .true.

      okay_to_reduce_gradT_excess = .true. 

      gradT_excess_f1 = 1d-4
      gradT_excess_f2 = 1d-2
      
      use_other_alpha_mlt = .false. ! implemented in run_star_extras
      x_ctrl(21) = 3.0 ! alpha for H envelope
      x_ctrl(22) = 1.5 ! alpha for rest
      x_ctrl(23) = 0.5 ! H_limit 
         ! use alpha_H if cell X >= H_limit; else use alpha_other
      x_ctrl(24) = 9d0 ! mass limit (Msun)
         ! use other_alpfa_mlt only if star_mass >= this limit.

! timesteps      
      varcontrol_target = 1d-3
      
      never_skip_hard_limits = .true

      delta_lgT_cntr_limit = 1d-2
       
      delta_lgT_max_limit =  1d-3
      delta_lgT_max_hard_limit = 1d-2

      delta_lgRho_limit = 0.1 
      
      delta_lgRho_cntr_limit = 0.03d0
      delta_lgRho_cntr_hard_limit = -1
      
      limit_for_rel_error_in_energy_conservation = 1d-7
      hard_limit_for_rel_error_in_energy_conservation = 1d-6
      
      min_xa_hard_limit = -1d-5
      min_xa_hard_limit_for_highT = -3d-5
      
      dX_nuc_drop_limit = 1d-2
      dX_nuc_drop_limit_at_high_T = -1
      dX_nuc_drop_max_A_limit =  52  
      dX_nuc_drop_min_X_limit =  1d-3
      dX_nuc_drop_hard_limit = 1d99

      delta_Ye_highT_limit = 1d-3

      delta_lgTeff_limit =  0.01

      delta_lgL_limit = 0.1     

      delta_lgL_He_limit = 0.1 ! limit for magnitude of change in lgL_He
      dHe_div_He_limit = -1
      
      delta_lg_XH_cntr_limit = 2d-2

      delta_lg_XHe_cntr_min = -4 
      delta_lg_XHe_cntr_limit = 1d-2

      delta_lg_XC_cntr_min = -2  
      delta_lg_XC_cntr_limit = 1d-2
      delta_lg_XC_cntr_hard_limit = 2d-2

      delta_lg_XNe_cntr_limit = 0.01d0
      delta_lg_XNe_cntr_max   = 0.0d0
      delta_lg_XNe_cntr_min   = -3.0d0
      delta_lg_XNe_cntr_hard_limit = 0.02d0

      delta_lg_XO_cntr_limit = 0.01d0
      delta_lg_XO_cntr_max   = 0.0d0
      delta_lg_XO_cntr_min   = -3.0d0
      delta_lg_XO_cntr_hard_limit = 0.02d0

      delta_lg_XSi_cntr_limit = 0.01d0
      delta_lg_XSi_cntr_max   = 0.0d0
      delta_lg_XSi_cntr_min   = -3.0d0
      delta_lg_XSi_cntr_hard_limit = 0.02d0

! mesh      
      mesh_delta_coeff = 1
      
      mesh_delta_coeff_for_highT = 1.5      
      logT_max_for_standard_mesh_delta_coeff = 9.0 
      logT_min_for_highT_mesh_delta_coeff = 9.5 

      ! avoid over-resolving composition changes
      min_dq_for_xa = 1d-4

! solver
      use_gold2_tolerances = .true.
      use_gold_tolerances = .true.

      always_use_dedt_form_of_energy_eqn = .true. 
      use_dedt_form_of_energy_eqn = .true.
      
      use_d_eos_dxa = .true.

      convergence_ignore_equL_residuals = .true.  ! dies in to_logT_9.5 without this
      
      max_tries_for_implicit_wind = 0
      iwind_tolerance = 1d-3
      iwind_lambda = 1 ! 0.5d0

      when_to_stop_rtol = 1d-3
      when_to_stop_atol = 1d-3

      min_timestep_limit = 1d-12 ! (seconds)

      xa_scale = 1d-5

      iter_for_resid_tol2 = 10
      
      ignore_too_large_correction = .false.
      
      make_gradr_sticky_in_solver_iters = .true.
      
      velocity_logT_lower_bound = -1d99
      max_dt_yrs_for_velocity_logT_lower_bound = 1d99

      ! high center T limit to avoid negative mass fractions
      sig_min_factor_for_high_Tcenter = 0.01
         ! inactive when >= 1d0
         ! if Tcenter >= Tcenter_min_for_sig_min_factor_full_on,
         ! then okay to reduce sig by as much as this factor
         ! as needed to prevent causing negative abundances
      Tcenter_min_for_sig_min_factor_full_on = 3.2d9
         ! if Tcenter >= this, factor = sig_min_factor_for_neg_abundances
         ! this should be > Tcenter_max_for_sig_min_factor_full_off.
      Tcenter_max_for_sig_min_factor_full_off = 2.8d9
         ! if Tcenter <= this, factor = 1, so has no effect
         ! this should be < Tcenter_min_for_sig_min_factor_full_on.
      ! for T > full_off and < full_on, factor changes linearly with Tcenter

      T_mix_limit = 0

      ! op_split_burn

      burn_steps_limit = 75
      burn_steps_hard_limit = 150

      op_split_burn = .true.
      op_split_burn_min_T = 5d8

      op_split_burn_eps = 1d-7
      op_split_burn_odescal = 1d-8
      
! GYRE output controls
      !write_pulse_data_with_profile = .true.
      pulse_data_format = 'GYRE'
      
      x_logical_ctrl(37) = .false. ! if true, then run GYRE

      x_integer_ctrl(1) = 1 ! output GYRE info at this step interval
      x_logical_ctrl(1) = .false. ! save GYRE info whenever save profile

      x_integer_ctrl(2) = 2 ! max number of modes to output per call
      x_logical_ctrl(2) = .false. ! output eigenfunction files

      x_integer_ctrl(3) = 0 ! mode l (e.g. 0 for p modes, 1 for g modes)
         ! should match gyre.in mode l
      x_integer_ctrl(4) = 1 ! order
      x_ctrl(1) = 0.158d-05 ! freq ~ this (Hz)
      x_ctrl(2) = 0.33d+03 ! growth < this (days)

! output
      photo_interval = 50
      profile_interval = 100
      history_interval = 10
      terminal_interval = 10
      write_header_frequency = 10

/ ! end of controls namelist

&pgstar
/ ! end of pgstar namelist
