=== AUTO-FIXES ===
All checks passed!
5 files left unchanged

=== RUFF CHECK ===
All checks passed!

=== PYLINT ANALYSIS ===
Exception on node <Import l.5 at 0x7f65b6400b30> in file '/home/njm/MESA/mesa/star/test_suite/custom_colors/python_helpers/HISTORY_check.py'
Traceback (most recent call last):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/pylint/checkers/imports.py", line 846, in _get_imported_module
    return importnode.do_import_module(modname)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/_base_nodes.py", line 146, in do_import_module
    return mymodule.import_module(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/scoped_nodes/scoped_nodes.py", line 527, in import_module
    return AstroidManager().ast_from_module_name(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/manager.py", line 232, in ast_from_module_name
    return self.ast_from_file(found_spec.location, modname, fallback=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/manager.py", line 124, in ast_from_file
    return AstroidBuilder(self).file_build(filepath, modname)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/builder.py", line 145, in file_build
    return self._post_build(module, builder, encoding)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/builder.py", line 169, in _post_build
    self.delayed_assattr(delayed)
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/builder.py", line 240, in delayed_assattr
    for inferred in node.expr.infer():
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 171, in infer
    yield from self._infer(context=context, **kwargs)
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/bases.py", line 176, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/bases.py", line 176, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/inference.py", line 358, in infer_attribute
    for owner in self.expr.infer(context):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/inference.py", line 358, in infer_attribute
    for owner in self.expr.infer(context):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/bases.py", line 176, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/bases.py", line 176, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/inference.py", line 279, in infer_call
    yield from callee.infer_call_result(caller=self, context=callcontext)
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/scoped_nodes/scoped_nodes.py", line 1733, in infer_call_result
    yield from returnnode.value.infer(context)
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/inference.py", line 270, in infer_call
    for callee in self.func.infer(context):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/inference.py", line 358, in infer_attribute
    for owner in self.expr.infer(context):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/inference.py", line 279, in infer_call
    yield from callee.infer_call_result(caller=self, context=callcontext)
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/scoped_nodes/scoped_nodes.py", line 1733, in infer_call_result
    yield from returnnode.value.infer(context)
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/inference.py", line 270, in infer_call
    for callee in self.func.infer(context):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/bases.py", line 176, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/node_ng.py", line 184, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 142, in raise_if_nothing_inferred
    yield next(generator)
          ^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/decorators.py", line 111, in wrapped
    for res in _func(node, context, **kwargs):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/inference.py", line 334, in infer_import_from
    module = self.do_import_module()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/_base_nodes.py", line 146, in do_import_module
    return mymodule.import_module(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/nodes/scoped_nodes/scoped_nodes.py", line 527, in import_module
    return AstroidManager().ast_from_module_name(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/manager.py", line 232, in ast_from_module_name
    return self.ast_from_file(found_spec.location, modname, fallback=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/manager.py", line 124, in ast_from_file
    return AstroidBuilder(self).file_build(filepath, modname)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/builder.py", line 144, in file_build
    module, builder = self._data_build(data, modname, path)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/builder.py", line 204, in _data_build
    module = builder.visit_module(node, modname, node_file, package)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/rebuilder.py", line 254, in visit_module
    [self.visit(child, newnode) for child in node.body],
     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/astroid/rebuilder.py", line 603, in visit
    visit_method = getattr(self, visit_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'TreeRebuilder' object has no attribute 'visit_typealias'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/njm/anaconda3/lib/python3.12/site-packages/pylint/utils/ast_walker.py", line 91, in walk
    callback(astroid)
  File "/home/njm/anaconda3/lib/python3.12/site-packages/pylint/checkers/imports.py", line 526, in visit_import
    imported_module = self._get_imported_module(node, name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/njm/anaconda3/lib/python3.12/site-packages/pylint/checkers/imports.py", line 871, in _get_imported_module
    raise astroid.AstroidError from e
astroid.exceptions.AstroidError
************* Module batch_run
batch_run.py:1:0: C0114: Missing module docstring (missing-module-docstring)
batch_run.py:40:12: W0621: Redefining name 'param_file' from outer scope (line 99) (redefined-outer-name)
batch_run.py:30:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
batch_run.py:30:35: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
batch_run.py:54:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
batch_run.py:54:35: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
batch_run.py:84:19: W0621: Redefining name 'param_file' from outer scope (line 99) (redefined-outer-name)
************* Module HISTORY_check
HISTORY_check.py:1:0: C0114: Missing module docstring (missing-module-docstring)
HISTORY_check.py:1:0: C0103: Module name "HISTORY_check" doesn't conform to snake_case naming style (invalid-name)
HISTORY_check.py:1:0: F0002: HISTORY_check.py: Fatal error while checking 'HISTORY_check.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/njm/.cache/pylint/pylint-crash-2025-06-30-13-11-10.txt'. (astroid-error)
************* Module SED_check
SED_check.py:1:0: C0114: Missing module docstring (missing-module-docstring)
SED_check.py:1:0: C0103: Module name "SED_check" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:9:0: C0115: Missing class docstring (missing-class-docstring)
SED_check.py:51:18: C0103: Attribute name "ax" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:9:0: R0902: Too many instance attributes (15/7) (too-many-instance-attributes)
SED_check.py:10:4: R0913: Too many arguments (9/5) (too-many-arguments)
SED_check.py:89:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:101:15: W0718: Catching too general exception Exception (broad-exception-caught)
SED_check.py:97:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
SED_check.py:101:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:128:15: W0718: Catching too general exception Exception (broad-exception-caught)
SED_check.py:128:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:151:19: W0718: Catching too general exception Exception (broad-exception-caught)
SED_check.py:151:12: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:171:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:175:4: R0914: Too many local variables (17/15) (too-many-locals)
SED_check.py:282:19: W0718: Catching too general exception Exception (broad-exception-caught)
SED_check.py:226:16: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:229:16: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:282:12: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:175:4: R0912: Too many branches (23/12) (too-many-branches)
SED_check.py:175:4: R0915: Too many statements (64/50) (too-many-statements)
SED_check.py:175:26: W0613: Unused argument 'frame' (unused-argument)
SED_check.py:348:19: W0718: Catching too general exception Exception (broad-exception-caught)
SED_check.py:332:29: R1735: Consider using '{"title": 'SED Animation', "artist": 'MESA Colors'}' instead of a call to 'dict'. (use-dict-literal)
SED_check.py:348:12: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:364:19: W0718: Catching too general exception Exception (broad-exception-caught)
SED_check.py:364:12: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
SED_check.py:337:16: W0201: Attribute 'animation' defined outside __init__ (attribute-defined-outside-init)
SED_check.py:353:16: W0201: Attribute 'animation' defined outside __init__ (attribute-defined-outside-init)
SED_check.py:368:0: C0116: Missing function or method docstring (missing-function-docstring)
************* Module static_HISTORY_check
static_HISTORY_check.py:1:0: C0114: Missing module docstring (missing-module-docstring)
static_HISTORY_check.py:1:0: C0103: Module name "static_HISTORY_check" doesn't conform to snake_case naming style (invalid-name)
static_HISTORY_check.py:36:0: C0103: Constant name "header_line" doesn't conform to UPPER_CASE naming style (invalid-name)
static_HISTORY_check.py:37:5: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
static_HISTORY_check.py:63:4: W0707: Consider explicitly re-raising using 'except ValueError as exc' and 'raise ValueError("The header does not contain a 'Flux_bol' column.") from exc' (raise-missing-from)
static_HISTORY_check.py:78:4: C0103: Constant name "hr_xlabel" doesn't conform to UPPER_CASE naming style (invalid-name)
static_HISTORY_check.py:79:4: C0103: Constant name "hr_ylabel" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module static_SED_check
static_SED_check.py:88:0: C0301: Line too long (115/100) (line-too-long)
static_SED_check.py:1:0: C0114: Missing module docstring (missing-module-docstring)
static_SED_check.py:1:0: C0103: Module name "static_SED_check" doesn't conform to snake_case naming style (invalid-name)
static_SED_check.py:17:0: C0116: Missing function or method docstring (missing-function-docstring)
static_SED_check.py:27:0: C0116: Missing function or method docstring (missing-function-docstring)
static_SED_check.py:43:8: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
static_SED_check.py:1:0: F0002: static_SED_check.py: Fatal error while checking 'static_SED_check.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/njm/.cache/pylint/pylint-crash-2025-06-30-13-11-25.txt'. (astroid-error)
static_SED_check.py:1:0: R0801: Similar lines in 2 files
==SED_check:[257:264]
==static_SED_check:[66:73]
                        wavelengths,
                        flux,
                        label="Full SED (common)",
                        color="black",
                        linewidth=1.5,
                        linestyle=linestyle,
                    ) (duplicate-code)
static_SED_check.py:1:0: R0801: Similar lines in 2 files
==HISTORY_check:[232:245]
==SED_check:[352:361]
                self.animation = FuncAnimation(
                    self.fig,
                    self.update_plot,
                    interval=self.refresh_interval * 1000,  # Convert to milliseconds
                    cache_frame_data=False,
                )

                # Show the plot (this will block until window is closed)
                plt.show() (duplicate-code)
static_SED_check.py:1:0: R0801: Similar lines in 2 files
==SED_check:[274:281]
==static_SED_check:[78:86]
                        wavelengths,
                        convolved_flux,
                        label=f"Convolved SED ({file_path})",
                        linewidth=1,
                        linestyle=linestyle,
                    )
 (duplicate-code)
static_SED_check.py:1:0: R0801: Similar lines in 2 files
==SED_check:[217:223]
==static_SED_check:[36:42]
    for file_path in output_files:
        if "VEGA" in file_path:
            linestyle = "--"
        else:
            linestyle = "-"
 (duplicate-code)
static_SED_check.py:1:0: R0801: Similar lines in 2 files
==HISTORY_check:[106:112]
==static_HISTORY_check:[37:43]
            for line in fp:
                if "model_number" in line:
                    header_line = line.strip()
                    break

        if header_line is None: (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 0.00/10 (previous run: 0.00/10, +0.00)


=== TYPE CHECKING ===
static_SED_check.py:5: error: Library stubs not installed for "pandas"  [import-untyped]
static_HISTORY_check.py:12: error: Skipping analyzing "mesa_reader": module is installed, but missing library stubs or py.typed marker  [import-untyped]
SED_check.py:5: error: Library stubs not installed for "pandas"  [import-untyped]
SED_check.py:5: note: Hint: "python3 -m pip install pandas-stubs"
SED_check.py:5: note: (or run "mypy --install-types" to install all missing stub packages)
HISTORY_check.py:6: error: Skipping analyzing "mesa_reader": module is installed, but missing library stubs or py.typed marker  [import-untyped]
HISTORY_check.py:6: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
Found 4 errors in 4 files (checked 5 source files)

=== IMPORT SORTING CHECK ===
Skipped 1 files

=== BLACK FORMATTING CHECK ===
All done! ✨ 🍰 ✨
5 files would be left unchanged.

=== SUMMARY COMPLETE ===
