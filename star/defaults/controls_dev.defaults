! ============
! controls_dev
! ============

! CONTAINS OPTIONS THAT HAVE NOT YET BEEN THE GIVEN A GREEN LIGHT FOR GENERAL USE.
! IN PARTICULAR, THESE ARE NOT YET FOR USE IN RESEARCH TO BE PUBLISHED.

      

      ! TDC parameters
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         
      !   TDC_alfa  =     1.5d0         ! mixing length; alfa = 0 gives a purely radiative model.
      !   TDC_alfap =     0.0d0         ! turbulent pressure; Pt ~ alfap     
      !   TDC_alfat =     0.0d0         ! turbulent flux; Lt ~ TDC_alfat
      !   TDC_alfam =     0.25d0        ! turbulent viscosity; Eq and Uq ~ TDC_alfam
      !   TDC_alfar =     0.0d0         ! radiative dissipation of turbulent energy; Dr ~ TDC_alfar    
      !      
      ! TDC time weighting is determined by the velocity_time_centering controls.
      !     for Pt and Lt in turbulent energy equation
      !     for P and grav in momentum equation
      !     for P and L in energy equation
      !     for area when multiplied by P
      ! TDC_Lsurf_factor: Lsurf = TDC_Lsurf_factor*area(1)*clight*crad*T(1)**4
      ! TDC_use_Stellingwerf_Lr as in RSP
      !   

      ! ::

    TDC_alfa  = 1.5d0
    TDC_alfap = 0.0d0
    TDC_alfat = 0.0d0
    TDC_alfam = 0.25d0
    TDC_alfar = 0.0d0

    TDC_Lsurf_factor = 0.5d0
    TDC_use_Stellingwerf_Lr = .true.
    TDC_w_min_for_damping = 1d2
    TDC_etrb_xscale_min = 1d4
    TDC_num_outermost_cells_forced_nonturbulent = 0
    TDC_num_innermost_cells_forced_nonturbulent = 0

      ! period controls

      ! ::

    TDC_target_steps_per_cycle = 600
    TDC_min_max_R_for_periods = -1

      ! when to stop

      ! ::

    TDC_max_num_periods = -1
    TDC_GREKM_avg_abs_frac_new = 0.1d0
    TDC_GREKM_avg_abs_limit = -1

      ! output data for work integrals during a particular period

      ! ::

    TDC_work_period = -1
    TDC_work_filename = 'work.data'

      ! output data for 3d map.  format same as for gnuplot pm3d

      ! ::

    TDC_write_map = .false.
    TDC_map_columns_filename = 'map_columns.list'

      ! items listed in your map columns must also appear in your profile columns

      ! ::

    TDC_map_filename = 'map.data'
    TDC_map_first_period = -1
    TDC_map_last_period = -1
    TDC_map_zone_interval = 2
    TDC_map_history_filename = 'map_history.data'




    


      ! use_superad_reduction
      ! ~~~~~~~~~~~~~~~~~~~~~
      ! superad_reduction_Gamma_limit
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ! superad_reduction_Gamma_limit_scale
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ! superad_reduction_Gamma_inv_scale
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ! superad_reduction_diff_grads_limit
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ! superad_reduction_limit
      ! ~~~~~~~~~~~~~~~~~~~~~~~

      ! Implicit alternative to okay_to_reduce_gradT_excess, EXPERIMENTAL

      ! ::

    use_superad_reduction = .false.
    superad_reduction_Gamma_limit = 0.5d0
    superad_reduction_Gamma_limit_scale = 5d0
    superad_reduction_Gamma_inv_scale = 5d0
    superad_reduction_diff_grads_limit = 1d-3
    superad_reduction_limit = -1d0

! convection velocity equation
! ============================


      ! conv_vel_D
      ! ~~~~~~~~~~
      ! conv_vel_siglimit
      ! ~~~~~~~~~~~~~~~~~
      ! conv_vel_v0
      ! ~~~~~~~~~~~

      ! To avoid following tiny convective velocities to high precision
      ! as well as accounting for several orders-of-magnitude changes of
      ! conv_vel in individual steps, the variable included in the solver
      ! solver is not conv_vel, but instead ln(conv_vel + v0). v0 (in cm/s)
      ! then determines at which point relative errors in ln(conv_vel + v0)
      ! are small (TODO: explain better).

      ! ::

    conv_vel_D = 0d0
    conv_vel_siglimit = 1d99
    conv_vel_v0 = 1d0


      ! min_q_for_normal_mlt_gradT_full_off
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ! max_q_for_normal_mlt_gradT_full_on
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      ! Switches from the gradT given by standard MLT rather than conv_vel in the outer layers
      ! gradT is smoothly blend between this range in q

      ! ::

    min_q_for_normal_mlt_gradT_full_off = 1d99
    max_q_for_normal_mlt_gradT_full_on = 1d99


      ! conv_vel_ignore_thermohaline
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ! conv_vel_ignore_semiconvection
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      ! If false, then mlt will consider a convective velocity given by 3*D/Lambda
      ! as an additional source for the conv_vel equation (can be set for either
      ! thermohaline or semiconvective mixing). Thermohaline mixing can change
      ! a lot, and its inclusion makes things unstable, so by default we only keep
      ! semiconvection. It true, then the corresponding mixing coefficient is calculated
      ! in the regular way and added up to the final mixing coefficient.

      ! ::

    conv_vel_ignore_thermohaline = .true.
    conv_vel_ignore_semiconvection = .false.


      ! conv_vel_fully_lagrangian
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~
      ! conv_vel_include_homologous_term
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      ! If conv_vel_fully_lagrangian is true, then time derivatives for convective
      ! velocities are computed fully lagrangian, using values from the previous step
      ! at constant mass. Otherwise, on the outer layers of the star the term time
      ! derivative is computed using a time derivative at fixed mass
      ! ratio q (so-called non-homologous term), and the derivative with respect to q
      ! (so-called homologous term).
      ! if conv_vel_include_homologous_term is false, then the homologous term is
      ! ignored.

      ! ::

    conv_vel_fully_lagrangian = .false. 
    conv_vel_include_homologous_term = .true.


      ! conv_vel_use_mlt_vc_start
      ! ~~~~~~~~~~~~~~~~~~~~~~~~~

      ! If true, then the value of the convective velocity from mlt is used
      ! throughout all solver iterations rather than being updated at each.

      ! ::

    conv_vel_use_mlt_vc_start = .true.

