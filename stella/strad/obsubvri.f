      subroutineubvnew
      implicitreal*8(a-h,o-z)
      PARAMETER(NVARS=3)
      include '../obj/nfreq_and_mzone.inc'
      PARAMETER(NYDIM=(NVARS+2*NFREQ)*Mzon,MAXDER=4)
      Parameter(Is=5)
      PARAMETER(NZ=3000000)
      Parameter(Nstage=28,Natom=15)
      PARAMETER(KOMAX=80)
      LogicalLSYSTEM
      Parameter(LSystem=.FALSE.)
      Parameter(Pi=3.1415926535897932d+00,hPlanc=1.0545716280D-27,Cs=2.9979245800D+10,Boltzk=1.3806504000D-16,Avogar=6.0221417900D+2
     *3,AMbrun=1.6605387832D-24,AMelec=9.1093821500D-28,echarg=4.8032042700D-10,CG=6.6742800000D-08,CMS=1.9884000000D+33,RSol=6.9551
     *000000D+10,ULGR=1.4000000000D+01,UPURS=1.0000000000D+07,ULGPU=7.0000000000D+00,ULGEU=1.3000000000D+01,UPC=3.0856776000D+18,UTP
     *=1.0000000000D+05,URHO=1.0000000000D-06,CARAD=7.5657680191D-15,CSIGM=5.6704004778D-05,ERGEV=1.6021764864D-12,GRADeV=1.16045052
     *85D+04,RADC=7.5657680191D-02,CTOMP=4.0062048575D-01,CCAPS=2.6901213726D+01,CCAPZ=9.8964034725D+00)
      IntegerZn(Natom),ZnCo(Natom+1)
      DimensionAZ(Natom)
      Common/AZZn/AZ,Zn,ZnCo
      Common/NiAdap/tday,t_eve,XNifor(Mzon),AMeveNi,KNadap
      LOGICALFRST
      Parameter(Mfreq=130)
      Common/Kmzon/km,kmhap,Jac,FRST
      COMMON/STCOM1/t,H,HMIN,HMAX,EPS,N,METH,KFLAG,JSTART
      COMMON/YMAX/YMAX(NYDIM)
      COMMON/YSTIF/Y(NYDIM,MAXDER+1)
      COMMON/HNUSED/HUSED,NQUSED,NFUN,NJAC,NITER,NFAIL
      COMMON/HNT/HNT(7)
      PARAMETER(DELTA=1.d-05)
      PARAMETER(LICN=4*NZ,LIRN=2*NZ)
      LogicalNEEDBR
      COMMON/STJAC/THRMAT,HL,AJAC(LICN),IRN(LIRN),ICN(LICN),WJAC(NYDIM),FSAVE(NYDIM*2),IKEEP(5*NYDIM),IW(8*NYDIM),IDISP(11),NZMOD,NE
     *EDBR
      LOGICALCONV,CHNCND,SCAT,SEP
      COMMON/CUTOFF/FLOOR(NVARS+1),Wacc(NVARS+1),FitTau,TauTol,Rvis,CONV,CHNCND,SCAT,SEP
      LogicalLTHICK
      COMMON/THICK/LTHICK(Nfreq,Mzon)
      COMMON/CONVEC/UC(Mzon),YAINV(Mzon)
      COMMON/RAD/EDDJ(Mzon,Nfreq),EDDH(Mzon),HEDD(Nfreq),HEDRAD,CLIGHT,CKRAD,UFREQ,CFLUX,CCL,CLUM,CLUMF,CIMP,NTHICK(NFREQ),NTHNEW(NF
     *REQ),bolM,NCND,KRAD,NFRUS
      LOGICALEDTM
      COMMON/RADOLD/HEDOLD,HINEDD,EDTM
      Common/newedd/EddN(Mzon,Nfreq),HEdN(Nfreq),tfeau
      Common/oldedd/EddO(Mzon,Nfreq),HEdo(Nfreq),trlx
      Common/cnlast/Cnlast
      Common/Dhap/DHaphR(Mzon,Nfreq)
      COMMON/BAND/FREQ(NFREQ+1),FREQMN(NFREQ),WEIGHT(130),HAPPAL(NFREQ),HAPABSRON(NFREQ),HAPABS(NFREQ),DLOGNU(NFREQ)
      PARAMETER(NFRMIN=Nfreq/2)
      IntegerdLfrMax
      Common/observer/wH(Mfreq),cH(Mfreq),zerfr,Hcom(Mfreq),Hobs(Mfreq),freqob(Mfreq),dLfrMax
      Parameter(NP=15+15-1)
      Common/famu/fstatic(0:NP+1,Nfreq),fobs_corr(0:NP+1,Mfreq),fcom(0:NP+1,Mfreq),amustatic(0:NP+1)
      Common/rays/Pray(0:Np+1),fout(0:NP+1,Mfreq),abermu(0:NP+1),NmuNzon
      COMMON/LIM/Uplim,Haplim
      COMMON/AMM/DMIN,DM(Mzon),DMOUT,AMINI,AM(Mzon),AMOUT
      COMMON/Centr/RCE,Nzon
      Common/InEn/AMHT,EBurst,tBurst,tbeght
      COMMON/RADPUM/AMNI,XMNi,XNi,KmNick
      COMMON/RADGAM/FJgam(Mzon,2),toldg,tnewg
      COMMON/RADGlg/FJglog(Mzon,2)
      COMMON/CHEM/CHEM0(Mzon),RTphi(0:Mzon+1),EpsUq
      COMMON/REGIME/NREG(Mzon)
      doubleprecisionNRT
      COMMON/AQ/AQ,BQ,DRT,NRT
      COMMON/AZNUC/ACARB,ZCARB,ASI,ZSI,ANI,ZNI,QCSI,QSINI
      COMMON/QNRGYE/QNUC,RGASA,YELECT
      COMMON/CKN1/CK1,CK2,CFR,CRAP,CRAOLD
      LOGICALEVALJA,OLDJAC,BADSTE
      COMMON/EVAL/EVALJA,BADSTE,OLDJAC
      LogicalRadP
      COMMON/RadP/RadP
      COMMON/ARG/TP,PL,CHEM,LST,KENTR,JURS
      COMMON/RESULT/P,Egas,Sgas,ENG,CAPPA,PT,ET,ST,ENGT,CAPT,NZR
      COMMON/ABUND/XYZA,Yat(Natom)
      COMMON/AZ/AS,ZS,SCN
      COMMON/STR/PPL,EPL,SPL,ENGPL,CAPPL,CP,GAM,DA,DPE,DSE,DSP,BETgas
      COMMON/XELECT/XE,XET,XEPL,PE,Ycomp
      COMMON/URScap/Tpsqrt,Psicap,Scap,ScapT,ScapPl,ZMean,YZMean,ZMT,ZMPl,YZMT,YZMPl
      COMMON/BURNCC/CC,CCTP,CCPL,YDOT
      COMMON/ABarr/YABUN(Natom,Mzon)
      COMMON/UNSTL/UL,UPRESS,UE,UEPS,UCAP,UTIME,UV,UFLUX,UP
      COMMON/TAIL/KTAIL
      COMMON/UNINV/UPI,UEI
      COMMON/UNBSTL/UR,UM,UEPRI,ULGP,ULGE,ULGV,ULGTM,ULGEST,ULGFL,ULGCAP,ULGEPS
      COMMON/CONUR/EIT,DST,BBRCNR(5)
      COMMON/BAL/EL(MAXDER+1),YENTOT(MAXDER+1),ETOT0,ELVOL,ELSURF,ELTOT,TPSURF,HOLDBL,ELOST,EKO,RADBEG
      common/NSTEP/NSTEP,NDebug,MAXER,IOUT,NOUT
      common/CREAD/TAUOLD,NSTMAX,MBATCH,MAXORD
      common/debug/LfrDebug,Nperturb,Kbad
      REAL*8TPMAX(MAXDER+1),TQ(4)
      COMMON/TAU/TAU(Mzon+1),FLUX(Mzon)
      common/tauubvri/tauU(Mzon),tauB(Mzon),tauV(Mzon),tauR(Mzon),tauI(Mzon)
      COMMON/PHOT/XJPH,DMPH,RPH,TPH,PLPH,VPH,CHEMPH,GRVPH,HP,JPH
      PARAMETER(NFUNC=6)
      REAL*4WORK(Mzon+2,NFREQ),WRK(Mzon,4)
      REAL*8WRKX(Mzon),WORKX(Mzon+2)
      COMMON/STEPD/WRKX,WORKX,TPHOT,TEFF,WORK,WRK,NPHOT,NZM
      PARAMETER(TMCRIT=1.D-6,TPNSE=5.D0,EPGROW=0.02D0)
      Common/RUTP/Ry(Mzon),Uy(Mzon),Ty(Mzon),Press(Mzon),Rho(Mzon)
      COMMON/TOO/TOO,KO,KNTO,TO(KOMAX),STO(KOMAX),NTO(KOMAX)
      Parameter(Lcurdm=1000)
      RealTcurv
      IntegerNFRUSED
      REAL*8Flsave
      Common/Curve/tcurv(8,Lcurdm),Depos(Lcurdm),Flsave(MFREQ+1,Lcurdm),NFRUSED(Lcurdm),Lsaved
      LOGICALBEGRUN
      Common/BEGR/BEGRUN
      CHARACTER*80Model,Sumprf,Sumcur,Depfile,Flxfile
      COMMON/Files/Model,Sumprf,Sumcur,Depfile,Flxfile
      CHARACTER*1app
      LogicalGivdtl
      Common/ABGrap/NSTA,NSTB,TcurA,TcurB,Givdtl
      REAL*8MBOL,MU,MB,MV,MR,MI,MBOL1
      COMMON/COLOR/MBOL,MU,MB,MV,MR,MI,UMB,BMV,MBOL1,LubvU,LubvB,LubvV,LubvR,LubvI,Lyman
      COMMON/DETAIL/QRTarr(Mzon),UUarr(Mzon),ArrLum(Mzon),Acc(Mzon)
      Common/XYZ/XA,YA,URM
      INTEGERNPTSU,NPTSB,NPTSV,NPTSR,NPTSI
      logicaldebug
      PARAMETER(NPTSU=25)
      PARAMETER(NPTSB=21)
      PARAMETER(NPTSV=24)
      PARAMETER(NPTSR=24)
      PARAMETER(NPTSI=23)
      PARAMETER(NPTSMAX=25)
      real*8U0,B0,V0,UF0,BF0,VF0,RF0,IF0
      real*8WLU(NPTSU),TU(NPTSU),WLB(NPTSB),TB(NPTSB),WLV(NPTSV),TV(NPTSV),WLR(NPTSR),TR(NPTSR),WLI(NPTSI),TI(NPTSI)
      real*8FHX,FLXAVG,AMAGX,SCALE
      logicalfreqfind
      integerindfreq
      common/ubvwrk/indfreq(NPTSMAX,5),freqfind
      DATAU0/-0.7263D+00/
      DATAWLU/3000.,3050.,3100.,3150.,3200.,3250.,3300.,3350.,3400.,3450.,3500.,3550.,3600.,3650.,3700.,3750.,3800.,3850.,3900.,3950
     *.,4000.,4050.,4100.,4150.,4200./
      DATATU/0.000,0.016,0.068,0.167,0.287,0.423,0.560,0.673,0.772,0.841,0.905,0.943,0.981,0.993,1.000,0.989,0.916,0.804,0.625,0.423
     *,0.238,0.114,0.051,0.019,0.000/
      DATAB0/0.1649D+00/
      DATAWLB/3600.,3700.,3800.,3900.,4000.,4100.,4200.,4300.,4400.,4500.,4600.,4700.,4800.,4900.,5000.,5100.,5200.,5300.,5400.,5500
     *.,5600./
      DATATB/0.000,0.030,0.134,0.567,0.920,0.978,1.000,0.978,0.935,0.853,0.740,0.640,0.536,0.424,0.325,0.235,0.150,0.095,0.043,0.009
     *,0.000/
      DATAV0/0.0062D+00/
      DATAWLV/4700.,4800.,4900.,5000.,5100.,5200.,5300.,5400.,5500.,5600.,5700.,5800.,5900.,6000.,6100.,6200.,6300.,6400.,6500.,6600
     *.,6700.,6800.,6900.,7000./
      DATATV/0.000,0.030,0.163,0.458,0.780,0.967,1.000,0.973,0.898,0.792,0.684,0.574,0.461,0.359,0.270,0.197,0.135,0.081,0.045,0.025
     *,0.017,0.013,0.009,0.000/
      dataWLR/5500.,5600.,5700.,5800.,5900.,6000.,6100.,6200.,6300.,6400.,6500.,6600.,6700.,6800.,6900.,7000.,7100.,7200.,7300.,7400
     *.,7500.,8000.,8500.,9000./
      dataTR/0.00,0.23,0.74,0.91,0.98,1.00,0.98,0.96,0.93,0.90,0.86,0.81,0.78,0.72,0.67,0.61,0.56,0.51,0.46,0.40,0.35,0.14,0.03,0.00
     */
      dataWLI/7000.,7100.,7200.,7300.,7400.,7500.,7600.,7700.,7800.,7900.,8000.,8100.,8200.,8300.,8400.,8500.,8600.,8700.,8800.,8900
     *.,9000.,9100.,9200./
      dataTI/0.000,0.024,0.232,0.555,0.785,0.910,0.965,0.985,0.990,0.995,1.000,1.000,0.990,0.980,0.950,0.910,0.860,0.750,0.560,0.330
     *,0.150,0.030,0.000/
      UF0=-13.90
      BF0=-13.00
      VF0=-13.72
      RF0=-13.66
      IF0=-14.42
      SCALE=-2.5D0*DLOG10(CFLUX*(UR/(10.d0*UPC))**2)
      freqfind=.false.
      If(.NOT.freqfind)then
      DO09999i=1,NPTSU
      Lubv=NFREQ
09996 IF(.NOT.(Lubv.GT.1.AND.FREQMN(Lubv).GT.CCL/WLU(i)))GOTO09995
      Lubv=Lubv-1
      GOTO09996
09995 CONTINUE
      indfreq(i,1)=Lubv
09999 CONTINUE
      DO09993i=1,NPTSB
      Lubv=NFREQ
09990 IF(.NOT.(Lubv.GT.1.AND.FREQMN(Lubv).GT.CCL/WLB(i)))GOTO09989
      Lubv=Lubv-1
      GOTO09990
09989 CONTINUE
      indfreq(i,2)=Lubv
09993 CONTINUE
      DO09987i=1,NPTSV
      Lubv=NFREQ
09984 IF(.NOT.(Lubv.GT.1.AND.FREQMN(Lubv).GT.CCL/WLV(i)))GOTO09983
      Lubv=Lubv-1
      GOTO09984
09983 CONTINUE
      indfreq(i,3)=Lubv
09987 CONTINUE
      DO09981i=1,NPTSR
      Lubv=NFREQ
09978 IF(.NOT.(Lubv.GT.1.AND.FREQMN(Lubv).GT.CCL/WLR(i)))GOTO09977
      Lubv=Lubv-1
      GOTO09978
09977 CONTINUE
      indfreq(i,4)=Lubv
09981 CONTINUE
      DO09975i=1,NPTSI
      Lubv=NFREQ
09972 IF(.NOT.(Lubv.GT.1.AND.FREQMN(Lubv).GT.CCL/WLI(i)))GOTO09971
      Lubv=Lubv-1
      GOTO09972
09971 CONTINUE
      indfreq(i,5)=Lubv
09975 CONTINUE
      freqfind=.true.
      endif
      FLXAVG=0.d0
      wlstep=(WLU(2)-WLU(1))/CCL
      sumfhx=0.d0
      DO09969i=2,NPTSU-1
      Lfr=indfreq(i,1)
      FHobs=max(Flsave(Lfr,Lsaved),1.d-100)
      FHobs1=max(Flsave(Lfr+1,Lsaved),1.d-100)
      If(Lfr.LT.NFRUS)Then
      FHX=EXP(LOG(ABS(FHobs1))+LOG(ABS(FHobs/FHobs1))*DLOGNU(Lfr)*LOG((CCL/WLU(i))/FREQMN(Lfr+1)))
      else
      FHX=ABS(FHobs)
      endif
      FHX=FHX*TU(i)*(CCL/WLU(i))**5
      stepn=(WLU(i+1)-WLU(i))/CCL
      if(abs(wlstep-stepn)/wlstep.LT.1.d-4.AND.i.NE.NPTSU-1)then
      sumfhx=sumfhx+FHX
      else
      FLXAVG=FLXAVG+sumfhx*wlstep+FHX*(wlstep+stepn)/2.d0
      wlstep=stepn
      sumfhx=0.d0
      endif
09969 CONTINUE
      AMAGX=-2.5D+00*DLOG10(FLXAVG)+UF0+SCALE
      MU=AMAGX
      FLXAVG=0.d0
      wlstep=(WLB(2)-WLB(1))/CCL
      sumfhx=0.d0
      DO09966i=2,NPTSB-1
      Lfr=indfreq(i,2)
      FHobs=max(Flsave(Lfr,Lsaved),1.d-100)
      FHobs1=max(Flsave(Lfr+1,Lsaved),1.d-100)
      If(Lfr.LT.NFRUS)Then
      FHX=EXP(LOG(ABS(FHobs1))+LOG(ABS(FHobs/FHobs1))*DLOGNU(Lfr)*LOG((CCL/WLB(i))/FREQMN(Lfr+1)))
      else
      FHX=ABS(FHobs)
      endif
      FHX=FHX*TB(i)*(CCL/WLB(i))**5
      stepn=(WLB(i+1)-WLB(i))/CCL
      if(abs(wlstep-stepn)/wlstep.LT.1.d-4.AND.i.NE.NPTSB-1)then
      sumfhx=sumfhx+FHX
      else
      FLXAVG=FLXAVG+sumfhx*wlstep+FHX*(wlstep+stepn)/2.d0
      wlstep=stepn
      sumfhx=0.d0
      endif
09966 CONTINUE
      AMAGX=-2.5D+00*DLOG10(FLXAVG)+BF0+SCALE
      MB=AMAGX
      FLXAVG=0.d0
      wlstep=(WLV(2)-WLV(1))/CCL
      sumfhx=0.d0
      DO09963i=2,NPTSV-1
      Lfr=indfreq(i,3)
      FHobs=max(Flsave(Lfr,Lsaved),1.d-100)
      FHobs1=max(Flsave(Lfr+1,Lsaved),1.d-100)
      If(Lfr.LT.NFRUS)Then
      FHX=EXP(LOG(ABS(FHobs1))+LOG(ABS(FHobs/FHobs1))*DLOGNU(Lfr)*LOG((CCL/WLV(i))/FREQMN(Lfr+1)))
      else
      FHX=ABS(FHobs)
      endif
      FHX=FHX*TV(i)*(CCL/WLV(i))**5
      stepn=(WLV(i+1)-WLV(i))/CCL
      if(abs(wlstep-stepn)/wlstep.LT.1.d-4.AND.i.NE.NPTSV-1)then
      sumfhx=sumfhx+FHX
      else
      FLXAVG=FLXAVG+sumfhx*wlstep+FHX*(wlstep+stepn)/2.d0
      wlstep=stepn
      sumfhx=0.d0
      endif
09963 CONTINUE
      AMAGX=-2.5D+00*DLOG10(FLXAVG)+VF0+SCALE
      MV=AMAGX
      FLXAVG=0.d0
      wlstep=(WLR(2)-WLR(1))/CCL
      sumfhx=0.d0
      DO09960i=2,NPTSR-1
      Lfr=indfreq(i,4)
      FHobs=max(Flsave(Lfr,Lsaved),1.d-100)
      FHobs1=max(Flsave(Lfr+1,Lsaved),1.d-100)
      If(Lfr.LT.NFRUS)Then
      FHX=EXP(LOG(ABS(FHobs1))+LOG(ABS(FHobs/FHobs1))*DLOGNU(Lfr)*LOG((CCL/WLR(i))/FREQMN(Lfr+1)))
      else
      FHX=ABS(FHobs)
      endif
      FHX=FHX*TR(i)*(CCL/WLR(i))**5
      stepn=(WLR(i+1)-WLR(i))/CCL
      if(abs(wlstep-stepn)/wlstep.LT.1.d-4.AND.i.NE.NPTSR-1)then
      sumfhx=sumfhx+FHX
      else
      FLXAVG=FLXAVG+sumfhx*wlstep+FHX*(wlstep+stepn)/2.d0
      wlstep=stepn
      sumfhx=0.d0
      endif
09960 CONTINUE
      AMAGX=-2.5D+00*DLOG10(FLXAVG)+RF0+SCALE
      MR=AMAGX
      FLXAVG=0.d0
      wlstep=(WLI(2)-WLI(1))/CCL
      sumfhx=0.d0
      DO09957i=2,NPTSI-1
      Lfr=indfreq(i,5)
      FHobs=max(Flsave(Lfr,Lsaved),1.d-100)
      FHobs1=max(Flsave(Lfr+1,Lsaved),1.d-100)
      If(Lfr.LT.NFRUS)Then
      FHX=EXP(LOG(ABS(FHobs1))+LOG(ABS(FHobs/FHobs1))*DLOGNU(Lfr)*LOG((CCL/WLI(i))/FREQMN(Lfr+1)))
      else
      FHX=ABS(FHobs)
      endif
      FHX=FHX*TI(i)*(CCL/WLI(i))**5
      stepn=(WLI(i+1)-WLI(i))/CCL
      if(abs(wlstep-stepn)/wlstep.LT.1.d-4.AND.i.NE.NPTSI-1)then
      sumfhx=sumfhx+FHX
      else
      FLXAVG=FLXAVG+sumfhx*wlstep+FHX*(wlstep+stepn)/2.d0
      wlstep=stepn
      sumfhx=0.d0
      endif
09957 CONTINUE
      AMAGX=-2.5D+00*DLOG10(FLXAVG)+IF0+SCALE
      MI=AMAGX
      return
      end
