C- _trace '----' ;
C- version for direct call by strad, no plots inside
C- Sasha fits for Tbb & Av tested
C- We need Tbb as in lbalfit (no Av), and two versions of Av function
C- as Sasha did
C-  _TRACE "write(*,*)'  ymn ymx shifty=',ymn,ymx,shifty,"
C-  _TRACE "write(*,*)'  ttfit ii jstep =',ii,jstep,"
C-  _TRACE "write(*,*)'  ttfit xc05(1) NNAG=',xc05(1),"
C-  _TRACE "write(*,*)'  Flsave(1,Jsave)=',Flsave(1,Jsave),"
      subroutinett4strad(runname)
      Implicitreal*8(a-h,o-z)
C: *
      Parameter(FJnois=1.d-30)
      Parameter(MAXIT=15)
      Parameter(EPSTbb=1.D-4)
      real*4ploty(1000000),plotx(1000000),workxx(1000000),worky(8,1000000)
      real*4psploty(1000000),psplotx(1000000)
      real*4ymn,ymx,xmn,xmx,shifty,shiftx,pscale,tburst4,dummy4,answer
      character*80filein,psfile,device,titlestr,xlabel,ylabel,PHfile,avgfile,string
      character*(*)runname
      character*160wordm(10),filestr
      integerlwordm(10),lrun,nwordm,nnx,ntotx,nny
Cinteger iplot;
Clogical autox, autoy, ttopen, Auto(@Npictures);
Creal*4 x1(@Npictures),x2(@Npictures),y1(@Npictures),y2(@Npictures);
C*
      logicallightcurve,connect
      logicallexist1,lexist2
      logicalBadNum
      Character*80DFile,Rfile,Nidist
      INTEGERerrnum
C-      @wterm  "print*,";
C-NVARS - number of independent variables
      PARAMETER(NVARS=3)
C- 3 - NOCONV,4 - CONV
      include '../obj/nfreq_and_mzone.inc'
C-  PARAMETER(Mzon=90); -- h toy model
C- PARAMETER(Mzon=171); -- zoning for W7
C- PARAMETER(Mzon=340); -- zoning for W7+wind
C-PARAMETER(Mzon=86); -- zoning for W7fhh+wind
C-PARAMETER(Mzon=43); -- zoning for W7fhh
C-   PARAMETER (Mzon=521); -- zoning for ntomi Crab model
      PARAMETER(NYDIM=(NVARS+2*NFREQ)*Mzon,MAXDER=4)
C- PARAMETER(NYDIM=2*NFREQ*Mzon,MAXDER=4);
C- Nydim must be  2*(@Npe+@Npc)*Mzon  to use in Feau
C- PARAMETER(NYDIM=2*(@Npe+@Npc)*Mzon,MAXDER=4); -- to use in Feau
      Parameter(Is=5)
C- for test -- chego???
C-   PARAMETER (NZ=1200000); --  for Nfreq=200, Mzon=200
      PARAMETER(NZ=3000000)
C-  for Nfreq=100, Mzon=600
      Parameter(Nstage=28,Natom=15)
      PARAMETER(KOMAX=80)
C-MAX NUMBER OF STEPS IN PRESCRIBED MOMENTS
      LogicalLSYSTEM
C- /.TRUE./; -- for IBM
      Parameter(LSystem=.FALSE.)
      Parameter(Pi=3.1415926535897932d+00,hPlanc=1.0545716280D-27,Cs=2.9979245800D+10,Boltzk=1.3806504000D-16,Avogar=6.0221417900D+2
     *3,AMbrun=1.6605387832D-24,AMelec=9.1093821500D-28,echarg=4.8032042700D-10,CG=6.6742800000D-08,CMS=1.9884000000D+33,RSol=6.9551
     *000000D+10,ULGR=1.4000000000D+01,UPURS=1.0000000000D+07,ULGPU=7.0000000000D+00,ULGEU=1.3000000000D+01,UPC=3.0856776000D+18,UTP
     *=1.0000000000D+05,URHO=1.0000000000D-06,CARAD=7.5657680191D-15,CSIGM=5.6704004778D-05,ERGEV=1.6021764864D-12,GRADeV=1.16045052
     *85D+04,RADC=7.5657680191D-02,CTOMP=4.0062048575D-01,CCAPS=2.6901213726D+01,CCAPZ=9.8964034725D+00)
      IntegerZn(Natom),ZnCo(Natom+1)
      DimensionAZ(Natom)
      Common/AZZn/AZ,Zn,ZnCo
C
C      include for eve and strad
C*
      Common/NiAdap/tday,t_eve,XNifor(Mzon),AMeveNi,KNadap
      LOGICALFRST
      Parameter(Mfreq=130)
C- think about max Nfreq !
      Common/Kmzon/km,kmhap,Jac,FRST
C-   Common/NiAdap/tday,t_eve,XNifor(Mzon),AMeveNi,KNadap; -- must go to commonEve.inc
C- since it enters also bgcon*trf and is forgotten there
      COMMON/STCOM1/t,H,HMIN,HMAX,EPS,N,METH,KFLAG,JSTART
      COMMON/YMAX/YMAX(NYDIM)
      COMMON/YSTIF/Y(NYDIM,MAXDER+1)
      COMMON/HNUSED/HUSED,NQUSED,NFUN,NJAC,NITER,NFAIL
      COMMON/HNT/HNT(7)
C- FOR COSETBGH
      PARAMETER(DELTA=1.d-05)
C- DISTURBANCE CONSTANT standard was 1.d-04
C- cannot be less ~1.d-6 since opacity is saved in single precision
C-   PARAMETER (LICN=4*NZ,LIRN=8*NZ/5); -- FOR F01BRF, M28Y12
      PARAMETER(LICN=4*NZ,LIRN=2*NZ)
C- FOR F01BRF, M28Y12
C- maximum LIRN=2*NZ
      LogicalNEEDBR
C- F01BRF or M28Y12 needed
      COMMON/STJAC/THRMAT,HL,AJAC(LICN),IRN(LIRN),ICN(LICN),WJAC(NYDIM),FSAVE(NYDIM*2),IKEEP(5*NYDIM),IW(8*NYDIM),IDISP(11),NZMOD,NE
     *EDBR
      LOGICALCONV,
C- .TRUE. IF CONVECTION IS INCLUDED
     *CHNCND,
C- .TRUE. IF NCND IS CHANGED
     *SCAT,
C- .TRUE. IF Scattering included (Hapabs^=Happa)
     *SEP
C- .TRUE. IF absorption and scattering are in separate files
C-           (i.e. absorption without expansion effect)
      COMMON/CUTOFF/FLOOR(NVARS+1),Wacc(NVARS+1),FitTau,TauTol,Rvis,CONV,CHNCND,SCAT,SEP
      LogicalLTHICK
      COMMON/THICK/LTHICK(Nfreq,Mzon)
      COMMON/CONVEC/UC(Mzon),YAINV(Mzon)
      COMMON/RAD/EDDJ(Mzon,Nfreq),EDDH(Mzon),HEDD(Nfreq),HEDRAD,CLIGHT,CKRAD,UFREQ,CFLUX,CCL,CLUM,CLUMF,CIMP,NTHICK(NFREQ),NTHNEW(NF
     *REQ),bolM,NCND,KRAD,NFRUS
C- KRAD=(Mzon-NCND)*NFRUS IN STELLA
      LOGICALEDTM
C- Eddington factors time-dependent==.true.
      COMMON/RADOLD/HEDOLD,HINEDD,EDTM
      Common/newedd/EddN(Mzon,Nfreq),HEdN(Nfreq),tfeau
C- for EDTM==T
      Common/oldedd/EddO(Mzon,Nfreq),HEdo(Nfreq),trlx
C- for EDTM==T
      Common/cnlast/Cnlast
      Common/Dhap/DHaphR(Mzon,Nfreq)
      COMMON/BAND/FREQ(NFREQ+1),
C- frequency bins boundaries,
     *
C- frequency in units of h/(k*Tpunit)
     *FREQMN(NFREQ),
C- frequency mean (middle of bin)
     *WEIGHT(130),
C- bandwidth*freq(mean)**3
     *HAPPAL(NFREQ),
C- dimens-less kappa for Ron's absorp.+scatt.
     *HAPABSRON(NFREQ),
C- dimens-less kappa for Ron's absorption
     *HAPABS(NFREQ),
C- dimens-less kappa for S-B absorption
     *DLOGNU(NFREQ)
C- (log step in frequency)**-1
C- PARAMETER(NFRMIN=Nfreq/5); -- MINIMUM NFRUS
      PARAMETER(NFRMIN=Nfreq/2)
C- MINIMUM NFRUS
      IntegerdLfrMax
      Common/observer/wH(Mfreq),cH(Mfreq),zerfr,Hcom(Mfreq),Hobs(Mfreq),freqob(Mfreq),dLfrMax
      Parameter(NP=15+15-1)
C- Total number of tangent rays
      Common/famu/fstatic(0:NP+1,Nfreq),fobs_corr(0:NP+1,Mfreq),fcom(0:NP+1,Mfreq),amustatic(0:NP+1)
      Common/rays/Pray(0:Np+1),fout(0:NP+1,Mfreq),abermu(0:NP+1),NmuNzon
C- fout probably not needed
      COMMON/LIM/Uplim,Haplim
C- to BEGRAD
      COMMON/AMM/DMIN,DM(Mzon),DMOUT,AMINI,AM(Mzon),AMOUT
C- exactly as in VELTEM
      COMMON/Centr/RCE,Nzon
C- central radius & current Number of zones
      Common/InEn/AMHT,EBurst,tBurst,tbeght
C- Mass of Heated Core, Energy & time
      COMMON/RADPUM/AMNI,XMNi,XNi,KmNick
C- MASS OF Ni CORE, Ni ABUNDANCE
      COMMON/RADGAM/FJgam(Mzon,2),toldg,tnewg
C- zero-moment for gamma-radiation
C- 1 for old time (toldg)      2 for present time (tnewg)
      COMMON/RADGlg/FJglog(Mzon,2)
C- log FJgam
      COMMON/CHEM/CHEM0(Mzon),RTphi(0:Mzon+1),EpsUq
      COMMON/REGIME/NREG(Mzon)
      doubleprecisionNRT
      COMMON/AQ/AQ,BQ,DRT,NRT
C- BQ pseudo-viscosity for R-T
C- DRT is the mass distance or optical thickness
C- and used for weight in artificial viscosity
C- NRT is the power in pseudo-viscosity (may be noninteger)
      COMMON/AZNUC/ACARB,ZCARB,ASI,ZSI,ANI,ZNI,QCSI,QSINI
      COMMON/QNRGYE/QNUC,RGASA,YELECT
C-   COMMON/CKN1/CK1,CK2,CFR,CRAP;
      COMMON/CKN1/CK1,CK2,CFR,CRAP,CRAOLD
      LOGICALEVALJA,
C- EVALUATE JACOBIAN
     *OLDJAC,
C- JACOBIAN MAY NEED UPDATING
     *BADSTE
C- BAD STEP: RETURNED BY DIFMAT - TRY SMALLER
      COMMON/EVAL/EVALJA,BADSTE,OLDJAC
      LogicalRadP
      COMMON/RadP/RadP
      COMMON/ARG/TP,PL,CHEM,LST,KENTR,JURS
      COMMON/RESULT/P,Egas,Sgas,ENG,CAPPA,PT,ET,ST,ENGT,CAPT,NZR
      COMMON/ABUND/XYZA,Yat(Natom)
      COMMON/AZ/AS,ZS,SCN
      COMMON/STR/PPL,EPL,SPL,ENGPL,CAPPL,CP,GAM,DA,DPE,DSE,DSP,BETgas
      COMMON/XELECT/XE,XET,XEPL,PE,Ycomp
      COMMON/URScap/Tpsqrt,Psicap,Scap,ScapT,ScapPl,ZMean,YZMean,ZMT,ZMPl,YZMT,YZMPl
      COMMON/BURNCC/CC,CCTP,CCPL,YDOT
      COMMON/ABarr/YABUN(Natom,Mzon)
C- UNITS:
      COMMON/UNSTL/UL,UPRESS,UE,UEPS,UCAP,UTIME,UV,UFLUX,UP
      COMMON/TAIL/KTAIL
      COMMON/UNINV/UPI,UEI
C- 1./UP, 1./UE
      COMMON/UNBSTL/UR,UM,UEPRI,ULGP,ULGE,ULGV,ULGTM,ULGEST,ULGFL,ULGCAP,ULGEPS
      COMMON/CONUR/EIT,DST,BBRCNR(5)
      COMMON/BAL/EL(MAXDER+1),YENTOT(MAXDER+1),ETOT0,ELVOL,ELSURF,ELTOT,TPSURF,HOLDBL,ELOST,EKO,RADBEG
      common/NSTEP/NSTEP,NDebug,MAXER,IOUT,
C- IOUT      LINE PRINT INTERVAL
     *NOUT
C- NOUT      PRINT STEP
      common/CREAD/TAUOLD,NSTMAX,MBATCH,MAXORD
      common/debug/LfrDebug,Nperturb,Kbad
      REAL*8TPMAX(MAXDER+1),TQ(4)
      COMMON/TAU/TAU(Mzon+1),FLUX(Mzon)
      common/tauubvri/tauU(Mzon),tauB(Mzon),tauV(Mzon),tauR(Mzon),tauI(Mzon)
      COMMON/PHOT/XJPH,DMPH,RPH,TPH,PLPH,VPH,CHEMPH,GRVPH,HP,JPH
      PARAMETER(NFUNC=6)
      REAL*4WORK(Mzon+2,NFREQ)
CNFUNC IF NFREQ < NFUNC*
     *,WRK(Mzon,4)
      REAL*8WRKX(Mzon),WORKX(Mzon+2)
      COMMON/STEPD/WRKX,WORKX,TPHOT,TEFF,WORK,WRK,NPHOT,NZM
C       1 - LG(T), 2 - LG(PL), 3 - LG(P), 4 - LG(S)      *
      PARAMETER(TMCRIT=1.D-6,TPNSE=5.D0,EPGROW=0.02D0)
      Common/RUTP/Ry(Mzon),Uy(Mzon),Ty(Mzon),Press(Mzon),Rho(Mzon)
      COMMON/TOO/TOO,KO,KNTO,TO(KOMAX),STO(KOMAX),NTO(KOMAX)
      Parameter(Lcurdm=1000)
C- Dimension of the Tcurv array
      RealTcurv
      IntegerNFRUSED
C- an integer array which store exact number of used freqs
      REAL*8Flsave
C- remove this to read old flx files!
      Common/Curve/tcurv(8,Lcurdm),Depos(Lcurdm),Flsave(MFREQ+1,Lcurdm),NFRUSED(Lcurdm),Lsaved
      LOGICALBEGRUN
      Common/BEGR/BEGRUN
      CHARACTER*80Model,Sumprf,Sumcur,Depfile,Flxfile
      COMMON/Files/Model,Sumprf,Sumcur,Depfile,Flxfile
      CHARACTER*1app
C- dummy var for constructing of Opafile
      LogicalGivdtl
      Common/ABGrap/NSTA,NSTB,TcurA,TcurB,Givdtl
C-No. of steps & Time in days
      REAL*8MBOL,MU,MB,MV,MR,MI,MBOL1
      COMMON/COLOR/MBOL,MU,MB,MV,MR,MI,UMB,BMV,MBOL1,LubvU,LubvB,LubvV,LubvR,LubvI,Lyman
      COMMON/DETAIL/QRTarr(Mzon),UUarr(Mzon),ArrLum(Mzon),Acc(Mzon)
      Common/XYZ/XA,YA,URM
      Character*80Opafile
C- Common/opabs100/opacabs100(Nfreq); -- bad if here; now in argument for subr. 'opacity"
C- real*4 hptabab,hptabsc,hpsavsc; -- new!
      real*4hptabab,hptababron,hptabsc,hpsavsc
C- new!
      Common/Opsave/hpsavsc(Nfreq,14,14,Mzon/(Mzon/50)+1,6)
      Common/OpBand/TpTab(14),RhoTab(14),STab(6),Wavel(Nfreq),YATab(Natom),hptabab(Nfreq,14,14,Mzon/(Mzon/50)+1,2),hptababron(Nfreq,
     *14,14,Mzon/(Mzon/50)+1,2),hptabsc(Nfreq,14,14,Mzon/(Mzon/50)+1,2),
C-Peter Hoeflich:       EpsBand(@Nfreq,@Ntab,@Ntab,@Ns),
     *
C-        EppBand(@Nfreq,@Ntab,@Ntab,@Ns),
     *Msta,Nrho,Ntp,im
C- im number of mixture
C- old Dimension hpbanab1(Nfreq,@Ntab,@Ntab,Mzon/@skip),
      real*4hpbanab1(Nfreq,14,14,Mzon/(Mzon/50)+1),hpbanabron1(Nfreq,14,14,Mzon/(Mzon/50)+1),hpbansc1(Nfreq,14,14,Mzon/(Mzon/50)+1),
     *hpbanab2(Nfreq,14,14,Mzon/(Mzon/50)+1),hpbanabron2(Nfreq,14,14,Mzon/(Mzon/50)+1),hpbansc2(Nfreq,14,14,Mzon/(Mzon/50)+1)
      Equivalence(hptabab(1,1,1,1,1),hpbanab1(1,1,1,1)),(hptababron(1,1,1,1,1),hpbanabron1(1,1,1,1)),(hptabsc(1,1,1,1,1),hpbansc1(1,
     *1,1,1)),(hptabab(1,1,1,1,2),hpbanab2(1,1,1,1)),(hptababron(1,1,1,1,2),hpbanabron2(1,1,1,1)),(hptabsc(1,1,1,1,2),hpbansc2(1,1,1
     *,1))
      Common/tintrp/stmlog(6),tdlog,thaplog1,thaplog2,istold,Opafile
      Common/dumfreq/dumFreq(Nfreq+1),dumFreqmn(Nfreq),dumwavel(Nfreq)
C- _define @Mfreq  150
C-_define @Mfreq  126
C- parameter (Tbba=2000.d0,epsbb=1.d-3);
      parameter(Tbba=1.d04,epsbb=1.d-3)
C-Parameter(Mfreq=@Mfreq);
C- think about max Nfreq !
      real*8alumnu(Mfreq),Blc(Mfreq),Ab(Mfreq),nu(Mfreq),numn(Mfreq),Xpl(Mfreq),wbb(Mfreq)
      common/frq/alumnu,Blc,Ab,nu,numn,R14,frbba
C-_includen sahaz;
      Parameter(CPSI=3.0176176020D-04,CPRESS=1.0035958999D-04,CRGAS=8.3144721451D-01,CAvD=6.0221419900D+17,CSaha=1.5271823083D+23,DL
     *OW=1.0000000000D+05,DUP=1.0000000000D+08,CWW=1.4476482730D-01,CLOW=1.6666666667D+00)
      Parameter(Zf=1.2000000000D+01,Tpzb=3.8875094954D+00,Tpzf=1.4818760698D+02)
      DIMENSIONPION(Nstage,Natom)
      DIMENSIONPsum(Nstage,Natom)
      DIMENSIONGWgL(Nstage,Natom)
      DIMENSIONGWcL(Nstage,Natom)
      Character*2Chames(Natom)
      DATAPION/1.577633D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     *0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D
     *+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,2.852
     *388D+00,6.312851D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0
     *.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+
     *00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,1.307132D+00,2.8287
     *14D+00,5.554381D+00,7.482121D+00,4.548804D+01,5.684351D+01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.
     *000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+0
     *0,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,1.687295D+00,3.435514D+00,5.50355
     *3D+00,8.987690D+00,1.135652D+01,6.404817D+01,7.738233D+01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.0
     *00000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00
     *,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,1.579837D+00,4.078520D+00,6.374819D+00,8.981191
     *D+00,1.321440D+01,1.602350D+01,8.577053D+01,1.010892D+02,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.00
     *0000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     *0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,2.501815D+00,4.765971D+00,7.426884D+00,1.127494D+01,1.466810D
     *+01,1.832468D+01,2.405614D+01,2.774637D+01,1.280093D+02,1.580766D+02,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000
     *000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0
     *.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,5.962395D-01,5.487771D+00,8.314629D+00,1.147686D+01,1.606064D+01,1.997135D+
     *01,2.419539D+01,3.065910D+01,3.480191D+01,1.700176D+02,1.913235D+02,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.0000
     *00D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.
     *000000D+00,0.000000D+00,0.000000D+00,8.870484D-01,1.740676D+00,9.295209D+00,1.268373D+01,1.639717D+01,2.164240D+01,2.611014D+0
     *1,3.085638D+01,3.806278D+01,4.263495D+01,2.044250D+02,2.277500D+02,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.00000
     *0D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.0
     *00000D+00,0.000000D+00,6.944136D-01,2.181647D+00,3.295680D+00,1.392541D+01,1.784773D+01,2.210658D+01,2.801328D+01,3.302642D+01
     *,3.831808D+01,4.625556D+01,5.128031D+01,2.420700D+02,2.673794D+02,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000
     *D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.00
     *0000D+00,9.457672D-01,1.891534D+00,3.887509D+00,5.233632D+00,1.935632D+01,2.381245D+01,2.860511D+01,3.517326D+01,4.074342D+01,
     *4.658049D+01,5.524905D+01,6.072638D+01,2.828830D+02,3.102000D+02,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D
     *+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,1.202
     *227D+00,2.715454D+00,4.061577D+00,5.488931D+00,8.436476D+00,1.021197D+01,3.260866D+01,3.810920D+01,4.398108D+01,5.188375D+01,5
     *.855634D+01,6.550744D+01,7.564977D+01,8.202065D+01,3.741061D+02,4.054614D+02,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+
     *00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,1.828870D+00,3.2028
     *44D+00,4.746243D+00,6.927890D+00,8.726588D+00,1.058331D+01,1.444761D+01,1.664086D+01,4.906385D+01,5.559719D+01,6.254829D+01,7.
     *177387D+01,7.957210D+01,8.764883D+01,9.925334D+01,1.065294D+02,4.782217D+02,5.136154D+02,0.000000D+00,0.000000D+00,0.000000D+0
     *0,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,7.091514D-01,1.377455D+00,5.94150
     *7D+00,7.809833D+00,9.805808D+00,1.262570D+01,1.485377D+01,1.712825D+01,2.190931D+01,2.452032D+01,6.868707D+01,7.626481D+01,8.4
     *31834D+01,9.487844D+01,1.038023D+02,1.130279D+02,1.261410D+02,1.342641D+02,5.951951D+02,6.347665D+02,0.000000D+00,0.000000D+00
     *,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,9.167560D-01,1.878537D+00,3.557013D+00,6.359269
     *D+00,8.703379D+00,1.150007D+01,1.450331D+01,1.752988D+01,2.725898D+01,3.040381D+01,3.368788D+01,3.838771D+01,4.189227D+01,4.54
     *8966D+01,5.303259D+01,5.686208D+01,1.467970D+02,1.575892D+02,1.689616D+02,1.835833D+02,1.960001D+02,2.087651D+02,2.262879D+02,
     *2.373121D+02,1.024446D+03,1.076666D+03,0.000000D+00,0.000000D+00,8.862941D-01,2.108423D+00,4.083626D+00,6.370874D+00,8.826387D
     *+00,1.253287D+01,1.543399D+01,1.879930D+01,2.239670D+01,2.606372D+01,3.725046D+01,4.084786D+01,4.456130D+01,4.989938D+01,5.384
     *491D+01,5.790648D+01,6.626173D+01,7.055540D+01,1.794057D+02,1.912423D+02,2.037751D+02,2.197893D+02,2.333666D+02,2.472920D+02,2
     *.663234D+02,2.783921D+02,1.193964D+03,1.250441D+03/
      DATAPsum/1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,
     *1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D
     *+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,1.577633D+00,2.852
     *388D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9
     *.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+
     *00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,9.165239D+00,1.307132D+00,4.1358
     *46D+00,9.690227D+00,1.717235D+01,6.266039D+01,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.
     *195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+0
     *2,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.195039D+02,1.687295D+00,5.122809D+00,1.06263
     *6D+01,1.961405D+01,3.097057D+01,9.501874D+01,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.7
     *24011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02
     *,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.724011D+02,1.579837D+00,5.658357D+00,1.203318D+01,2.101437
     *D+01,3.422877D+01,5.025227D+01,1.360228D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.37
     *1120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,
     *2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.371120D+02,2.501815D+00,7.267786D+00,1.469467D+01,2.596961D+01,4.063770D
     *+01,5.896238D+01,8.301852D+01,1.107649D+02,2.387742D+02,3.968508D+02,3.968508D+02,3.968508D+02,3.968508D+02,3.968508D+02,3.968
     *508D+02,3.968508D+02,3.968508D+02,3.968508D+02,3.968508D+02,3.968508D+02,3.968508D+02,3.968508D+02,3.968508D+02,3.968508D+02,3
     *.968508D+02,3.968508D+02,3.968508D+02,3.968508D+02,5.962395D-01,6.084010D+00,1.439864D+01,2.587550D+01,4.193613D+01,6.190749D+
     *01,8.610288D+01,1.167620D+02,1.515639D+02,3.215815D+02,5.129050D+02,5.129050D+02,5.129050D+02,5.129050D+02,5.129050D+02,5.1290
     *50D+02,5.129050D+02,5.129050D+02,5.129050D+02,5.129050D+02,5.129050D+02,5.129050D+02,5.129050D+02,5.129050D+02,5.129050D+02,5.
     *129050D+02,5.129050D+02,5.129050D+02,8.870484D-01,2.627724D+00,1.192293D+01,2.460666D+01,4.100383D+01,6.264623D+01,8.875637D+0
     *1,1.196127D+02,1.576755D+02,2.003105D+02,4.047355D+02,6.324855D+02,6.324855D+02,6.324855D+02,6.324855D+02,6.324855D+02,6.32485
     *5D+02,6.324855D+02,6.324855D+02,6.324855D+02,6.324855D+02,6.324855D+02,6.324855D+02,6.324855D+02,6.324855D+02,6.324855D+02,6.3
     *24855D+02,6.324855D+02,6.944136D-01,2.876061D+00,6.171740D+00,2.009715D+01,3.794488D+01,6.005146D+01,8.806474D+01,1.210912D+02
     *,1.594092D+02,2.056648D+02,2.569451D+02,4.990151D+02,7.663945D+02,7.663945D+02,7.663945D+02,7.663945D+02,7.663945D+02,7.663945
     *D+02,7.663945D+02,7.663945D+02,7.663945D+02,7.663945D+02,7.663945D+02,7.663945D+02,7.663945D+02,7.663945D+02,7.663945D+02,7.66
     *3945D+02,9.457672D-01,2.837302D+00,6.724811D+00,1.195844D+01,3.131476D+01,5.512721D+01,8.373231D+01,1.189056D+02,1.596490D+02,
     *2.062295D+02,2.614785D+02,3.222049D+02,6.050880D+02,9.152880D+02,9.152880D+02,9.152880D+02,9.152880D+02,9.152880D+02,9.152880D
     *+02,9.152880D+02,9.152880D+02,9.152880D+02,9.152880D+02,9.152880D+02,9.152880D+02,9.152880D+02,9.152880D+02,9.152880D+02,1.202
     *227D+00,3.917681D+00,7.979258D+00,1.346819D+01,2.190467D+01,3.211663D+01,6.472529D+01,1.028345D+02,1.468156D+02,1.986993D+02,2
     *.572557D+02,3.227631D+02,3.984129D+02,4.804335D+02,8.545396D+02,1.260001D+03,1.260001D+03,1.260001D+03,1.260001D+03,1.260001D+
     *03,1.260001D+03,1.260001D+03,1.260001D+03,1.260001D+03,1.260001D+03,1.260001D+03,1.260001D+03,1.260001D+03,1.828870D+00,5.0317
     *14D+00,9.777957D+00,1.670585D+01,2.543244D+01,3.601574D+01,5.046335D+01,6.710422D+01,1.161681D+02,1.717653D+02,2.343135D+02,3.
     *060874D+02,3.856595D+02,4.733083D+02,5.725617D+02,6.790910D+02,1.157313D+03,1.670928D+03,1.670928D+03,1.670928D+03,1.670928D+0
     *3,1.670928D+03,1.670928D+03,1.670928D+03,1.670928D+03,1.670928D+03,1.670928D+03,1.670928D+03,7.091514D-01,2.086606D+00,8.02811
     *3D+00,1.583795D+01,2.564375D+01,3.826946D+01,5.312322D+01,7.025147D+01,9.216078D+01,1.166811D+02,1.853682D+02,2.616330D+02,3.4
     *59513D+02,4.408298D+02,5.446321D+02,6.576600D+02,7.838009D+02,9.180651D+02,1.513260D+03,2.148027D+03,2.148027D+03,2.148027D+03
     *,2.148027D+03,2.148027D+03,2.148027D+03,2.148027D+03,2.148027D+03,2.148027D+03,9.167560D-01,2.795293D+00,6.352307D+00,1.271158
     *D+01,2.141496D+01,3.291502D+01,4.741833D+01,6.494821D+01,9.220720D+01,1.226110D+02,1.562989D+02,1.946866D+02,2.365789D+02,2.82
     *0685D+02,3.351011D+02,3.919632D+02,5.387602D+02,6.963494D+02,8.653110D+02,1.048894D+03,1.244894D+03,1.453659D+03,1.679947D+03,
     *1.917259D+03,2.941705D+03,4.018371D+03,4.018371D+03,4.018371D+03,8.862941D-01,2.994717D+00,7.078342D+00,1.344922D+01,2.227560D
     *+01,3.480847D+01,5.024246D+01,6.904176D+01,9.143846D+01,1.175022D+02,1.547526D+02,1.956005D+02,2.401618D+02,2.900612D+02,3.439
     *061D+02,4.018126D+02,4.680743D+02,5.386297D+02,7.180354D+02,9.092776D+02,1.113053D+03,1.332842D+03,1.566209D+03,1.813501D+03,2
     *.079824D+03,2.358216D+03,3.552181D+03,4.802622D+03/
      DATAGWgL/
C- for ground state
     *-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000
     *D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.00
     *0000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,6.931472D-01,
     *-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000
     *D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.00
     *0000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,-4.054651D-01,-1.791759D+0
     *0,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000
     *000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0
     *.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,8.109302D-01,-4.054651D-01,-1.791759
     *D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.
     *000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+0
     *0,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.79
     *1759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+0
     *0,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.00000
     *0D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,1.791759D+00,4.054651D-01,-8.109302D-01,8.109302D-01,-4
     *.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.00000
     *0D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.0
     *00000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,-6.931472D-01,1.791759D+00,4.054651D-01,-8.109302D-01,8.109302D-
     *01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.
     *000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+0
     *0,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,6.931472D-01,-6.931472D-01,1.791759D+00,4.054651D-01,-8.109302D-01,8.109
     *302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+
     *00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.0000
     *00D+00,0.000000D+00,0.000000D+00,0.000000D+00,-1.791759D+00,6.931472D-01,-6.931472D-01,1.791759D+00,4.054651D-01,-8.109302D-01
     *,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.00
     *0000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,
     *0.000000D+00,0.000000D+00,0.000000D+00,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,1.791759D+00,4.054651D-01,-8.109
     *302D-01,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+
     *00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.0000
     *00D+00,0.000000D+00,0.000000D+00,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,1.791759D+0
     *0,4.054651D-01,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.
     *000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+0
     *0,0.000000D+00,0.000000D+00,1.791759D+00,4.054651D-01,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.9
     *31472D-01,1.791759D+00,4.054651D-01,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472
     *D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.0
     *00000D+00,0.000000D+00,6.931472D-01,-6.931472D-01,1.791759D+00,4.054651D-01,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.791759
     *D+00,6.931472D-01,-6.931472D-01,1.791759D+00,4.054651D-01,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,
     *-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.00000
     *0D+00,0.000000D+00,1.823216D-01,-1.823216D-01,-1.427116D+00,1.427116D+00,1.133287D-01,-2.876821D-01,-7.419373D-01,-2.302585D+0
     *0,1.791759D+00,4.054651D-01,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,1.791759D+00,4.0
     *54651D-01,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.00000
     *0D+00,0.000000D+00,-7.419373D-01,7.419373D-01,2.876821D-01,-1.133287D-01,-1.427116D+00,1.427116D+00,1.133287D-01,-2.876821D-01
     *,-7.419373D-01,-2.302585D+00,1.791759D+00,4.054651D-01,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.
     *931472D-01,1.791759D+00,4.054651D-01,-8.109302D-01,8.109302D-01,-4.054651D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.93147
     *2D-01,-6.931472D-01/
      DATAGWcL/
C- for excited electron configuration
     *-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000
     *D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.00
     *0000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,6.931472D-01,
     *-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000
     *D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.00
     *0000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,-9.162907D-01,-1.791759D+0
     *0,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000
     *000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0
     *.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,-2.876821D-01,-9.162907D-01,-1.79175
     *9D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0
     *.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+
     *00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.7
     *91759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+
     *00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.0000
     *00D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,1.791759D+00,9.162907D-01,2.876821D-01,-2.876821D-01,-
     *9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.0000
     *00D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.
     *000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,-6.931472D-01,1.791759D+00,9.162907D-01,2.876821D-01,-2.876821D
     *-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0
     *.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+
     *00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,6.931472D-01,-6.931472D-01,1.791759D+00,9.162907D-01,2.876821D-01,-2.87
     *6821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D
     *+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000
     *000D+00,0.000000D+00,0.000000D+00,0.000000D+00,-1.791759D+00,6.931472D-01,-6.931472D-01,1.791759D+00,9.162907D-01,2.876821D-01
     *,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.0
     *00000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00
     *,0.000000D+00,0.000000D+00,0.000000D+00,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,1.791759D+00,9.162907D-01,2.876
     *821D-01,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D
     *+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000
     *000D+00,0.000000D+00,0.000000D+00,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,1.791759D+
     *00,9.162907D-01,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0
     *.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+
     *00,0.000000D+00,0.000000D+00,1.791759D+00,9.162907D-01,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.
     *931472D-01,1.791759D+00,9.162907D-01,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.93147
     *2D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.
     *000000D+00,0.000000D+00,6.931472D-01,-6.931472D-01,1.791759D+00,9.162907D-01,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.79175
     *9D+00,6.931472D-01,-6.931472D-01,1.791759D+00,9.162907D-01,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01
     *,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.000000D+00,0.0000
     *00D+00,0.000000D+00,6.931472D-01,-6.931472D-01,1.823216D-01,-1.823216D-01,-5.596158D-01,-9.808293D-01,-1.504077D+00,-2.302585D
     *+00,1.791759D+00,9.162907D-01,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,1.791759D+00,9
     *.162907D-01,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931472D-01,-6.931472D-01,0.000
     *000D+00,0.000000D+00,-1.504077D+00,1.504077D+00,9.808293D-01,5.596158D-01,1.823216D-01,-1.823216D-01,-5.596158D-01,-9.808293D-
     *01,-1.504077D+00,-2.302585D+00,1.791759D+00,9.162907D-01,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-
     *6.931472D-01,1.791759D+00,9.162907D-01,2.876821D-01,-2.876821D-01,-9.162907D-01,-1.791759D+00,6.931472D-01,-6.931472D-01,6.931
     *472D-01,-6.931472D-01/
      DataChames/'H ','He','C ','N ','O ','Ne','Na','Mg','Al','Si','S ','Ar','Ca','Fe','Ni'/
C: vars. Sasha *
C-   Dimension freqob(Mfreq);
      Parameter(Ldel=Mfreq/10)
      integerian,j,i,n,Nrec,nfrus
      real*8Ast,hplanck1,b1,b2,Tbb,ybb,LB,BB,LBa,BBa,bBlack,frbb,dx,dAb,F01,F02,FAb1,FAb2,Ft1,Ft2,Av,Fa,Fb1,Fx,D,F1,F2,Fi,a11,a12,a2
     *1,a22,c1,c2,dummy,frbba
C- NAG SEARCHMIN VARIABLES
      INTEGERNNAG,IA,iwbb,MAXCAL,IPRINT,IFAIL,INAG
      DOUBLEPRECISIONXtol,RR,factorstep,DELTAbb,F,X02AAF,XC05(2),AJINV(2,2),RVEC(2),W(20)
      DimensionWCF(2,4),QTF(2),RCF(3),FJAC(2,2),DIAG(2)
      EXTERNALRESID
C-, MONIT;
C: vars. for ps plots *
      realblue
      character*80argsys
      realgreen
      integerierror,Isys
      character*4Csys
      equivalence(Csys,Isys)
      integeriunit
      integernpoint
      integerline_width
      realred
      realxps(10)
      realyps(10)
      realfont_size
      dataIsys/0/
C: local variables *
      INTEGERNPTSU,NPTSB,NPTSV,NPTSR,NPTSI
      logicaldebug
C-
      PARAMETER(NPTSU=25)
      PARAMETER(NPTSB=21)
      PARAMETER(NPTSV=24)
      PARAMETER(NPTSR=24)
      PARAMETER(NPTSI=23)
      PARAMETER(NPTSMAX=25)
C- maximum number of points
      real*8Lbolavg,Mbolavg
      real*8U0,B0,V0,UF0,BF0,VF0,RF0,IF0
      real*8WLU(NPTSU),TU(NPTSU),WLB(NPTSB),TB(NPTSB),WLV(NPTSV),TV(NPTSV),WLR(NPTSR),TR(NPTSR),WLI(NPTSI),TI(NPTSI)
      real*8FHX,FLXAVG,AMAGX,SCALE
      logicalfreqfind
      integerindfreq
      common/ubvwrk/indfreq(NPTSMAX,5),freqfind
C-      Common/observer/wH(Nfreq),cH(Nfreq),zerfr;
      parameter(NrecMax=10000)
      real*8sumlum(Mfreq,0:NrecMax),avglum(Mfreq),timeph(0:NrecMax),rphsav(0:NrecMax)
      integerinit
      saveinit
      datainit/0/
C: for transmission functions *
C-      the response functions for UBVRI filters was taken from
C-      Bessell M.S.,PASP 102(1990)1181--1199;
C-      R & I bands are corresponding roughly to the Cousins system
C-      DATA freqfind/.false./; -- bad for transportability;
      DATAU0/-0.7263D+00/
C-
      DATAWLU/3000.,3050.,3100.,3150.,3200.,3250.,3300.,3350.,3400.,3450.,3500.,3550.,3600.,3650.,3700.,3750.,3800.,3850.,3900.,3950
     *.,4000.,4050.,4100.,4150.,4200./
C-
      DATATU/0.000,0.016,0.068,0.167,0.287,0.423,0.560,0.673,0.772,0.841,0.905,0.943,0.981,0.993,1.000,0.989,0.916,0.804,0.625,0.423
     *,0.238,0.114,0.051,0.019,0.000/
C-
      DATAB0/0.1649D+00/
C-
      DATAWLB/3600.,3700.,3800.,3900.,4000.,4100.,4200.,4300.,4400.,4500.,4600.,4700.,4800.,4900.,5000.,5100.,5200.,5300.,5400.,5500
     *.,5600./
C-
      DATATB/0.000,0.030,0.134,0.567,0.920,0.978,1.000,0.978,0.935,0.853,0.740,0.640,0.536,0.424,0.325,0.235,0.150,0.095,0.043,0.009
     *,0.000/
C-
      DATAV0/0.0062D+00/
C-
      DATAWLV/4700.,4800.,4900.,5000.,5100.,5200.,5300.,5400.,5500.,5600.,5700.,5800.,5900.,6000.,6100.,6200.,6300.,6400.,6500.,6600
     *.,6700.,6800.,6900.,7000./
C-
      DATATV/0.000,0.030,0.163,0.458,0.780,0.967,1.000,0.973,0.898,0.792,0.684,0.574,0.461,0.359,0.270,0.197,0.135,0.081,0.045,0.025
     *,0.017,0.013,0.009,0.000/
C-
      dataWLR/5500.,5600.,5700.,5800.,5900.,6000.,6100.,6200.,6300.,6400.,6500.,6600.,6700.,6800.,6900.,7000.,7100.,7200.,7300.,7400
     *.,7500.,8000.,8500.,9000./
C-
      dataTR/0.00,0.23,0.74,0.91,0.98,1.00,0.98,0.96,0.93,0.90,0.86,0.81,0.78,0.72,0.67,0.61,0.56,0.51,0.46,0.40,0.35,0.14,0.03,0.00
     */
C-
      dataWLI/7000.,7100.,7200.,7300.,7400.,7500.,7600.,7700.,7800.,7900.,8000.,8100.,8200.,8300.,8400.,8500.,8600.,8700.,8800.,8900
     *.,9000.,9100.,9200./
C-
      dataTI/0.000,0.024,0.232,0.555,0.785,0.910,0.965,0.985,0.990,0.995,1.000,1.000,0.990,0.980,0.950,0.910,0.860,0.750,0.560,0.330
     *,0.150,0.030,0.000/
C-real*4 ttt(MFREQ);
      real*8ttt(MFREQ)
      Common/Volanm/Ryzer,Kmcor
C- emulate Ni for analyt.model
      BLACK(Lbl,Tpbl)=(exp(-(FREQMN(Lbl)/Tpbl)))/(1.d0-(exp(-(FREQMN(Lbl)/Tpbl))))
      BLACKD(Lbl,Tpbl)=(FREQMN(Lbl)/Tpbl)*(exp(-(FREQMN(Lbl)/Tpbl)))/(1.d0-(exp(-(FREQMN(Lbl)/Tpbl))))**2
      GOTO09993
09995 CONTINUE
Cpsplot : interactive plotting routine, real*4 workxx() and worky(,) *
      GOTO(09993),I6R001
09993 CONTINUE
      GOTO09990
09994 CONTINUE
C: read from console, ignore mistyping *
      BadNum=.false.
09997 If(BadNum)write(*,*)' I expect integer number! Once more...'
      BadNum=.true.
      read(*,*,end=09998,err=09997)answer
      GOTO(09993),I6R002
09990 CONTINUE
C
C @wterm ' Check Ldel =',Ldel, ' and wbb(.) in %_flx_fits_findTb';
C @wterm ' remember to correct nu, numn for freq, freqob';
C @pause;
C-- @wterm ' press enter if OK';
C-- read(*,*);
C @wterm ' remember to correct Eddirel for freqs in Edd. factors';
C @wterm ' remember to correct Eddirel for Lorentz in chi and eta';
C @wterm ' remember to correct Eddirel for shape_fout(ip) and save',
C        ' Amu(ip,Nzon)';
C @pause;
C-- @wterm ' press enter if OK';
C-- read(*,*);
C*
C: do not open unit=1  strad.1 -- take all from strad
C             unit=8  dat file
C             unit=28 Nidist
C             71  file='Tbba1o.res'
C             18  file='log.res'
C             14  file='Tbb1o.res'
C                 *
C-    Open(unit=1,file=filein,status='old');
C-    READ(1,'(A)'); -- header
C-    read(1,'(A)') filestr;
C-    close(1);
C: filestr contains filenames for input and output *
C-   runname(1:)=wordm(1);
      lrun=len_trim(runname)
C-   rfile(1:)='/dev/null';
      rfile(1:)=runname(1:lrun)//'.tt'
      dfile(1:)=runname(1:lrun)//'.dat'
C-   Sumprf(1:)=runname(1:lrun)//'.prf'; -- in common/Files/
C-   SumCur(1:)=runname(1:lrun)//'.crv';
C-   model(1:)='../../eve/run/'//wordm(3)(1:lwordm(3))//'.mod';
C- in common/Files/
C-   Nidist(1:)='../../eve/run/'//wordm(4)(1:lwordm(4))//'.xni';
      Nidist(1:)='../../eve/run/'//model(1:len_trim(model)-4)//'.xni'
      Opafile(1:)='../../vladsf/'//wordm(5)(1:lwordm(5))
C- standard path
      Depfile(1:)=runname(1:lrun)//'.dep'
      Flxfile(1:)=runname(1:lrun)//'.flx'
      PHfile(1:)=runname(1:lrun)//'.ph'
C- change to .phf for the test
      avgfile(1:)=runname(1:lrun)//'.avg'
      INQUIRE(FILE=Sumprf,EXIST=LEXIST1)
      INQUIRE(FILE=sumcur,EXIST=LEXIST2)
      IF(LEXIST1.AND.LEXIST2)THEN
      BEGRUN=.FALSE.
      ELSEIF(.NOT.LEXIST1.AND..NOT.LEXIST2)THEN
      BEGRUN=.TRUE.
      ELSE
      write(*,*)' File Sumprf or SUMCUR is missing'
C-   stop 28;
      ENDIF
      Open(unit=4,file=Rfile)
C- here *.tt
      Open(unit=8,file=Dfile)
C- data file
      Open(unit=28,file=Nidist,form='unformatted',status='old')
      open(71,file='Tbba1o.res')
C-      open(71,file='Tbba2o.res');
      open(18,file='log.res')
      open(14,file='Tbb1o.res')
C-      open(14,file='Tbb2o.res');
      eit=1.d-5
      dst=1.d-4
C- accuracy of iterations
      callbegintt
C- here begtt.trf only to make headers
C- close(8); -- this is needed in strad to detach dat file for use by ttfit
C: *
      if(init.EQ.0)then
      CLUMNU=LOG10(8.D0*UR**2*(BOLTZK*UTP)**3/(CS*HPLANC)**2)
      doL=1,Nfreq
C-        freqob(L)=freqmn(L); -- defined in begin
C-       ttt(L)=SNGL(LOG10(FJNOIS))+CLUMNU;
      ttt(L)=(LOG10(FJNOIS))+CLUMNU
      avglum(L)=(LOG10(FJNOIS))+CLUMNU
      enddo
      If(Mfreq-1.GT.Nfreq)then
      doL=Nfreq+1,Mfreq-1
C-          freqob(L)=freqmn(Nfreq)*exp(-dble(L-Nfreq)/dlognu(1)); -- defined in begin
C-         ttt(L)=SNGL(LOG10(FJNOIS))+CLUMNU;
      ttt(L)=(LOG10(FJNOIS))+CLUMNU
      avglum(L)=(LOG10(FJNOIS))+CLUMNU
      enddo
      endif
C- for Sasha, correct and remove. Use freqob.
      nu(1)=freq(1)*UFREQ
      DO09987j=2,Mfreq
      nu(j)=sqrt(freqob(j-1)*freqob(j))*UFREQ
C- only for geom. progr. in freq, freqob
09987 CONTINUE
      DO09984j=1,Mfreq-1
C-  numn(j)=sqrt(nu(j)*nu(j+1));
      numn(j)=freqob(j)*UFREQ
09984 CONTINUE
      init=1
      endif
      write(4,'(4a)')'  time           Tbb         vFe       ',' Teff      Rlast_sc   R(tau2/3)','    Mbol     MU      MB      MV   
     *   MI      MR   Mbolavg','  gdepos'
      close(10)
      close(11)
      close(22)
      close(23)
C- We'll begin from the beginning:
C prf not needed
C--jprint=0; -- ask
C--  jstep=0; -- ask
C--@wterm ' Input jprint (1-no questions, print) and jstep (1-all records)';
C--@rterm jprint,jstep;
C--  iyes=1;
C  lunit=10;
C--  call stradio('sm',lunit,sumprf);
C--  lunit=10 sumprf still opened in strad.
C _While lunit ^=  -1 & iyes ^= -1  _do
C  lightcurve=.false.; -- normal Y-axis, reverse for light curve
C  connect=.true.;     -- connect points
C  tburst4=sngl(t*(UTIME*CRAP)/86400.);
C  _if (jstep==0) _then;
C     @wterm ' Read step=', nstep, ' time(d)=', tburst4;
C     @wterm 'ncnd=',ncnd, ' nfrus=',nfrus;
C     @wterm ' Skip/proceed/Exit ? 0/1/-1';
C     _call @readkey; iyes=answer;
C  _fi;
C  _if (jstep==1 .or. iyes==1) _then;
C     <*prf: read data from sumprf *;
C     <*intensity: fill real*4 arrays for supermongo *;
C      iplot=1; _call @psplot;
C     <*density: *;   iplot=2;  _call @psplot;
C     <*temperature: *; iplot=3; _call @psplot;
C     <*velocity: *;   iplot=4; _call @psplot;
C--     <*luminosity: *; iplot=5; _call @psplot;
C  _fi;
C  lunit=10;
C  call stradio('sm',lunit,sumprf);
C _od;
C      *
C: read .crv file, file with observations .. *
      xlabel=' t[days]'
      nnx=0
      nny=7
09981 CONTINUE
      lunit=11
      callstradio('sc',lunit,sumcur)
      if(lunit.EQ.-1)goto10
C-     print *, 'Lsaved=',Lsaved;
      DO09978i=1,lsaved
C- the number of saved points;
      nnx=nnx+1
      if(nnx.GT.1000000)stop' @buffer too small in ttfit'
      workxx(nnx)=tcurv(1,i)
      DO09975m=1,nny
      worky(m,nnx)=tcurv(1+m,i)
C- use worky as buffer
C    here:
C    Tcurv(1,*)=Time;
C    Tcurv(2,*)=TEFF*1.D-03;   -- Our Tphotosphere
C    Tcurv(3,*)=RPH;
C    Tcurv(4,*)=VPH*1.D+06/(UTIME*CRAP);
C    Tcurv(5,*)=MBOL;
C    Tcurv(6,*)=MU;
C    Tcurv(7,*)=MB;
C    Tcurv(8,*)=MV;*
09975 CONTINUE
09978 CONTINUE
      GOTO09981
10    continue
      ntotx=nnx
C- nny=1;
      nnd=0
      nny=8
C- for depos
09972 CONTINUE
      Lunit=22
C- dep file
      callStradIO('sd',Lunit,Depfile)
      If(Lunit.EQ.-1)goto110
C- EOF reached
C-          print *, 'Lsaved=',Lsaved;
      DO09969i=1,lsaved
C- the number of saved points;
      nnd=nnd+1
      worky(nny,nnd)=Depos(i)
C- use worky as buffer
C-     depos(Lsaved)=ELVOL*UEPRI/UTIME;
09969 CONTINUE
      GOTO09972
110   continue
      ntotd=nnd
      nny=1
C-       @wterm ' ntotd nnx ',ntotd, nnx;
C-      pause;
C- @wterm ' Read ',nnx,' points..';
C- In Tcurv: TEFF3,RPH,VPH3,MBOL,MU,MB,MV
C
C _Repeat
C   @wterm ' TEFF3, RPH, VPH3, MBOL, MU, MB, MV';
C   @wterm '   1     2     3    4     5  6   7';
C         @wterm ' Which plot ? 1/2/3/4/5/6/7/8/-1 ';
C          _call @readkey; iyes=answer;
C         _if (iyes ^= -1 & iyes <= 8) _then;
C           _do i=1,nnx;
C              ploty(i)=worky(iyes,i);
C           _od;
C     lightcurve=.false.;
C     connect=.true.;
C     _case iyes _of
C       _1 ylabel='T_{eff}*10^{3}'; iplot=6;
C       _2 ylabel='R_{ph}'; iplot=7;
C       _3 ylabel='V_{ph}*10^{3}';iplot=8;
C       _4 ylabel='Mbol'; lightcurve=.true.; connect=.false.; iplot=9;
C       _5 ylabel='M_{U}';lightcurve=.true.; connect=.false.; iplot=10;
C       _6 ylabel='M_{B}';lightcurve=.true.; connect=.false.; iplot=11;
C       _7 ylabel='M_{V}';lightcurve=.true.; connect=.false.; iplot=12;
C       _8 ylabel='depos'; iplot=13;
C     _esac;
C       nnx=1;
C       plotx(1)=workxx(1);
C       if(lightcurve)then;
C         ploty(1)=-worky(iyes,1);
C        else;
C         ploty(1)=worky(iyes,1);
C        endif;
C      _do i=2,ntotx;
C        if(lightcurve)then;
C         if(abs(-worky(iyes,i)-ploty(nnx)) > abs(ploty(nnx))*@CRITVL .or.
C            abs( workxx(i)-plotx(nnx)) > abs(plotx(nnx))*@CRITVL) then;
C          nnx=nnx+1;
C          ploty(nnx)=-worky(iyes,i);
C          plotx(nnx)=workxx(i);
C         endif;
C        else;
C         if(abs(worky(iyes,i)-ploty(nnx)) > abs(ploty(nnx))*@CRITVL .or.
C            abs( workxx(i)-plotx(nnx)) > abs(plotx(nnx))*@CRITVL) then;
C          nnx=nnx+1;
C          ploty(nnx)=worky(iyes,i);
C          plotx(nnx)=workxx(i);
C         endif;
C        endif;
C      _od;
C      @wterm ' Selected for plot ',nnx,' points..';
C    _call @psplot;
C    nnx=ntotx; -- restore nnx
C  _fi;
C _until iyes==-1;
C   *
C: *
      l3run=lrun+3
      open(50,file=PHfile(1:l3run))
C-   open(50,file=PHfile);
      open(52,file=avgfile(1:l3run))
C-   open(52,file=avgfile);
      write(50,' (999F8.4)' )(SNGL(log10(freqob(L)*UFREQ)),L=1,Mfreq-1)
C- Mfreq is for Rphtau
      write(52,' (999F8.4)' )(SNGL(log10(freqob(L)*UFREQ)),L=1,Mfreq-1)
      nnx=0
      Nrec=0
      CLUMNU=LOG10(8.D0*UR**2*(BOLTZK*UTP)**3/(CS*HPLANC)**2)
      SUMOLD=0.
      DO09966L=1,Mfreq-1
      sumlum(L,0)=0.d0
C- integral  L_\nu(t)dt
09966 CONTINUE
09963 CONTINUE
      lunit=23
      callstradio('sf',lunit,Flxfile)
      if(lunit.EQ.-1)goto99
      DO09960Jsave=1,Lsaved
      nnx=nnx+1
      NFRUS=NFRUSED(Jsave)
C- exact number of used (saved) freqs
C-        write(*,'(a,1p,3e11.3)') ' UR,flsave(Mfreq/1,JSAVE): ',
C-		UR,flsave(Mfreq,JSAVE),flsave(1,JSAVE);
C-        pause;
      Rphtau=UR*flsave(Mfreq,JSAVE)
C: obtain in ttt(MFREQ) corrected output flux
C                      R**2 multiplication is already done in Lbalrad *
      SUM=0.
      DO09957L=1,NFRUS
C-        ttt(L)=SNGL(LOG10(MAX(ABS(Flsave(L,Jsave)*FREQMN(L)**3),FJNOIS)));
      ttt(L)=(LOG10(MAX(ABS(Flsave(L,Jsave)*freqob(L)**3),FJNOIS)))
      ttt(L)=ttt(L)+CLUMNU
C- erg/(sec*Hz)
      SUM=SUM+ttt(L)
09957 CONTINUE
      DO09954L=NFRUS+1,MFREQ-1
C-        ttt(L)=CLUMNU+SNGL(LOG10(FJNOIS));
      ttt(L)=CLUMNU+(LOG10(FJNOIS))
      SUM=SUM+ttt(L)
09954 CONTINUE
      If(Nrec.EQ.0)then
      time_n=tcurv(1,1)
      timeph(0)=tcurv(1,1)
      rphsav(0)=Rphtau
      Rphtau0=Rphtau
      endif
C-        SUM=SUM+tcurv(1,JSAVE)+flsave(NFRUS+1,JSAVE)+NFRUS;
C- flsave(NFRUS+1,.) was used for saving Tphot
C- now Tphot is found in this routine
C- and flsave(Mfreq,.) keeps Rphtau
      SUM=SUM+tcurv(1,JSAVE)+NFRUS+0.1*nnx
      If(ABS(SUMOLD-SUM).GT.0.001*SUM.or.Jsave.EQ.Lsaved
C- to make sure we take the last point
     *.or.tcurv(1,JSAVE)-time_n.GT.1.d0)Then
C- eq. weights
      write(50,' (F15.10,1X,I4,1X,G10.3,999F8.3)' )tcurv(1,JSAVE),NFRUS,flsave(Mfreq,JSAVE),(ttt(L),L=1,MFREQ-1)
C- output all MFREQ-1 fluxes for Super Mongo
C- now flsave(Mfreq,JSAVE) keeps Rphtau
      Nrec=Nrec+1
C: find and save integral of Luminosity in sumlum and
C                      print the average for the time delay Rphtau/clight
C                      in avglum *
      DO09951L=1,NFRUS
      sumlum(L,Nrec)=sumlum(L,Nrec-1)+1.d+1**ttt(L)*8.64d4*max(0.d0,dble(tcurv(1,JSAVE)-time_n))
09951 CONTINUE
      DO09948L=NFRUS+1,Mfreq-1
      sumlum(L,Nrec)=sumlum(L,Nrec-1)
09948 CONTINUE
      timeph(Nrec)=tcurv(1,JSAVE)
      rphsav(Nrec)=Rphtau
C: find number of record Nrec0 for timeph(Nrec0) closest
C                to timeph(Nrec)-Rphtau/clight (cs for CGS units)
C                Nrec1 for rhtau change and Nrec2 as max(Nrec0,Nrec1)
C                and define tdelay *
C- assume that the last Nrec0 is known and everything
C- goes monotonically
C-     write(*,'(a,4i5,1p,e20.10)')' Nrec Nrec0 Nrec1 Nrec2 tdelay=',
C-       Nrec, Nrec0, Nrec1, Nrec2, tdelay;
      If(8.64d4*timeph(Nrec).GT.Rphtau0/cs)then
09945 IF(.NOT.(8.64d4*(timeph(Nrec)-timeph(Nrec0+1)).GT.Rphtau0/cs.and.Nrec0+1.LT.NrecMax))GOTO09944
      Nrec0=Nrec0+1
C-         write(*,'(a,4i5)')' Nrec Nrec0 =', Nrec, Nrec0;
      GOTO09945
09944 CONTINUE
      else
      Nrec0=0
      endif
C- we have to save tcomoving in timeph!!!
C- a crude trick to estimate real tdelay:
      Nrec1=Nrec
09942 IF(.NOT.(abs(rphsav(Nrec)-rphsav(Nrec1)).LT.0.3d0*rphsav(Nrec).AND.Nrec1.GT.1))GOTO09941
      Nrec1=Nrec1-1
      GOTO09942
09941 CONTINUE
C-   Nrec2=max(Nrec0,Nrec1);
      Nrec2=Nrec0
      tdelay=8.64d4*(timeph(Nrec)-timeph(Nrec2))
C-   write(52,'(a,4i5,1p,e20.10)')' Nrec Nrec0 Nrec1 Nrec2 tdelay=',
C-  Nrec, Nrec0, Nrec1, Nrec2, tdelay;
      if(Nrec.GT.1.AND.tdelay.GT.0.d0)then
      DO09939L=1,Mfreq-1
      avglum(L)=1.d+1**(-CLUMNU)*(sumlum(L,Nrec)-sumlum(L,Nrec2))/tdelay
      avglum(L)=(LOG10(MAX(avglum(L),FJNOIS)))+CLUMNU
09939 CONTINUE
      else
      DO09936L=1,Mfreq-1
      avglum(L)=ttt(L)
09936 CONTINUE
      endif
      write(52,' (F15.10,1X,I4,1X,G10.3,999F8.3)' )tcurv(1,JSAVE),NFRUS,Rphtau/UR,(avglum(L),L=1,MFREQ-1)
C: to find Lbolavg *
      Lbolavg=0.d0
      DoL=1,min(NFRUS,Nfreq)
C- ignoring highest freqs
      Lbolavg=Lbolavg+10.d0**avglum(L)*(freq(L+1)-freq(L))*Ufreq
      Enddo
C-     WRITE(@term,*)' Averaged Lum=', Lbolavg;
      Mbolavg=4.75D0-2.5D0*LOG10(ABS(Lbolavg)/3.86d+33)
      SUMOLD=SUM
      time_n=tcurv(1,JSAVE)
C: Tbb, Av for these moments *
      hplanck1=2.d0*pi*hplanc
      DO09933j=1,nfreq
C-        alumnu(j)=10.D0**ttt(j);
      alumnu(j)=10.D0**(ttt(j)-CLUMNU)
C-          alumnu(j)=10.D0**(avglum(j)-CLUMNU); -- for ttavg
09933 CONTINUE
Cfindb* Sasha   *
C: find best fit Tb via binsearch.
C                 Find frbb as Sasha   *
C: find maximum alumnu(freqob) and save the frequency number in
C              Lfrmax *
      Lfrmax=10
      doL=11,Nfrus
C- later change to Nfrmaxobs
      If(alumnu(L).GT.alumnu(Lfrmax))Lfrmax=L
      enddo
C-    write (*,*)' Nfrus  Lfrmax=', Nfrus,Lfrmax;
C:  starting value of Tp for search *
      Twien=freqob(Lfrmax)/2.82144d0
C-write (*,*)'  Twien=', Twien,'  alumnu(1)=',alumnu(1);
      If(Lfrmax.LT.Nfrus)then
C:   define dfsum(Tbb) and binsearch *
C
C-- when A*bb is fixed on max aLumnu. -- not debugged
C  _Define  @dfsum "
C   dfsum=0.d0;
C   _Do L=1,NFRUS; -- later change to Nfrmaxobs
C       dfsum=dfsum+freqob(L)**3
C                *Black(L,Tbbfit)*(alumnu(L) - alumnu(Lfrmax)
C                *Black(L,Tbbfit)/black(Lfrmax,Tbbfit))
C                *(BlackD(Lfrmax,Tbbfit)/Black(Lfrmax,Tbbfit)-
C                           BlackD(L,Tbbfit)/Black(L,Tbbfit));
C       --  write(*,*) ' L=',L,'   dfsum=',dfsum;
C   _od;
C   ";
C
C*
C- in old way but with weights wbb(L)
      If(Twien.GT.0.d0)then
C-  do  L=max(Lfrmax-Ldel,1),min(Lfrmax+Ldel,NFRUS);
C- later change to Nfrmaxob
      doL=1,NFRUS
C- later change to Nfrmaxob
C-     wbb(L)=1.d+0; --test
C-stand:
      wbb(L)=freqob(L)**4*Black(L,Twien)
C-       wbb(L)=Black(L,Twien);
      enddo
C-     Tbbfit=0.3d0*Twien;  -- Initial approximation Tbb
      Tbbfit=Twien
C- Initial approximation Tbb
C-     wbb(Lfrmax)=1.d+2;
      else
C-  do  L=max(Lfrmax-Ldel,1),min(Lfrmax+Ldel,NFRUS);
C- later change to Nfrmaxob
      doL=1,NFRUS
C- later change to Nfrmaxob
      wbb(L)=1.d+0
      enddo
      Tbbfit=Tbba/UTp
      endif
      LB=0.D0
      BB=0.D0
C-   _Do L=max(Lfrmax-Ldel,1),min(Lfrmax+Ldel,NFRUS); -- later change to Nfrmaxobs
      DO09930L=1,NFRUS
C- later change to Nfrmaxobs
      LB=LB+wbb(L)*alumnu(L)*freqob(L)**3*Black(L,Tbbfit)
      BB=BB+wbb(L)*(freqob(L)**3*Black(L,Tbbfit))**2
09930 CONTINUE
      Ar2=LB/BB
      dfsum=0.d0
C-   _Do L=max(Lfrmax-Ldel,1),min(Lfrmax+Ldel,NFRUS); -- later change to Nfrmaxobs
      DO09927L=1,NFRUS
C- later change to Nfrmaxobs
      dfsum=dfsum+wbb(L)*(alumnu(L)-Ar2*freqob(L)**3*Black(L,Tbbfit))*freqob(L)**3*BlackD(L,Tbbfit)/Tbbfit
C-write(*,*) ' L=',L,'   dfsum=',dfsum;
09927 CONTINUE
      ian=0
      IFAIL=1
C- must be 0 if found
      IF(.NOT.(dfsum.LT.0.))GOTO09924
09921 IF(.NOT.(dfsum.LT.0.))GOTO09920
      Ast=10.**(min(-12+ian,-1))*Tbbfit
      Tbbfit=Tbbfit-Ast
      LB=0.D0
      BB=0.D0
C-   _Do L=max(Lfrmax-Ldel,1),min(Lfrmax+Ldel,NFRUS); -- later change to Nfrmaxobs
      DO09918L=1,NFRUS
C- later change to Nfrmaxobs
      LB=LB+wbb(L)*alumnu(L)*freqob(L)**3*Black(L,Tbbfit)
      BB=BB+wbb(L)*(freqob(L)**3*Black(L,Tbbfit))**2
09918 CONTINUE
      Ar2=LB/BB
      dfsum=0.d0
C-   _Do L=max(Lfrmax-Ldel,1),min(Lfrmax+Ldel,NFRUS); -- later change to Nfrmaxobs
      DO09915L=1,NFRUS
C- later change to Nfrmaxobs
      dfsum=dfsum+wbb(L)*(alumnu(L)-Ar2*freqob(L)**3*Black(L,Tbbfit))*freqob(L)**3*BlackD(L,Tbbfit)/Tbbfit
C-write(*,*) ' L=',L,'   dfsum=',dfsum;
09915 CONTINUE
C-         @wterm 'Tbbfit',Tbbfit,'   dfsum=',dfsum;
      ian=ian+1
      GOTO09921
09920 CONTINUE
      GOTO09922
09924 CONTINUE
      IF(.NOT.(dfsum.GT.0.))GOTO09923
09912 IF(.NOT.(dfsum.GT.0.))GOTO09911
      Ast=10.**(min(-12+ian,-1))*Tbbfit
      Tbbfit=Tbbfit+Ast
      LB=0.D0
      BB=0.D0
C-   _Do L=max(Lfrmax-Ldel,1),min(Lfrmax+Ldel,NFRUS); -- later change to Nfrmaxobs
      DO09909L=1,NFRUS
C- later change to Nfrmaxobs
      LB=LB+wbb(L)*alumnu(L)*freqob(L)**3*Black(L,Tbbfit)
      BB=BB+wbb(L)*(freqob(L)**3*Black(L,Tbbfit))**2
09909 CONTINUE
      Ar2=LB/BB
      dfsum=0.d0
C-   _Do L=max(Lfrmax-Ldel,1),min(Lfrmax+Ldel,NFRUS); -- later change to Nfrmaxobs
      DO09906L=1,NFRUS
C- later change to Nfrmaxobs
      dfsum=dfsum+wbb(L)*(alumnu(L)-Ar2*freqob(L)**3*Black(L,Tbbfit))*freqob(L)**3*BlackD(L,Tbbfit)/Tbbfit
C-write(*,*) ' L=',L,'   dfsum=',dfsum;
09906 CONTINUE
C-         @wterm 'Tbbfit=',Tbbfit,'   dfsum=',dfsum;
      ian=ian+1
      GOTO09912
09911 CONTINUE
      GOTO09922
09923 CONTINUE
      IFAIL=0
C- Tbbfit found
     *
09922 CONTINUE
      ITQ=0
C-  Errest=abs(dfsum);
09903 IF(.NOT.(abs(Ast).GT.EpsTbb*abs(Tbbfit).AND.ITQ.LT.MAXIT.AND.IFAIL.NE.0))GOTO09902
C-     Errest=abs(dfsum);
      Ast=0.5D0*SIGN(Ast,dfsum)
      Tbbfit=Tbbfit+Ast
      LB=0.D0
      BB=0.D0
C-   _Do L=max(Lfrmax-Ldel,1),min(Lfrmax+Ldel,NFRUS); -- later change to Nfrmaxobs
      DO09900L=1,NFRUS
C- later change to Nfrmaxobs
      LB=LB+wbb(L)*alumnu(L)*freqob(L)**3*Black(L,Tbbfit)
      BB=BB+wbb(L)*(freqob(L)**3*Black(L,Tbbfit))**2
09900 CONTINUE
      Ar2=LB/BB
      dfsum=0.d0
C-   _Do L=max(Lfrmax-Ldel,1),min(Lfrmax+Ldel,NFRUS); -- later change to Nfrmaxobs
      DO09897L=1,NFRUS
C- later change to Nfrmaxobs
      dfsum=dfsum+wbb(L)*(alumnu(L)-Ar2*freqob(L)**3*Black(L,Tbbfit))*freqob(L)**3*BlackD(L,Tbbfit)/Tbbfit
C-write(*,*) ' L=',L,'   dfsum=',dfsum;
09897 CONTINUE
C-   If(Nrec>=357 & Nrec <=362) then;
C-     write(*,'(a,1p,4e12.3)')' Tbbfit  dfsum Lb BB:',Tbbfit*UTp,dfsum,LB,BB;
C-   endif;
C-     @wterm 'Tbbfit=',Tbbfit,'   Binsearch',dfsum;
      ITQ=ITQ+1
      GOTO09903
09902 CONTINUE
C-   If(Nrec>=357 & Nrec <=362) then;
C-     write(*,'(a,i5,a,1p,3e12.3)')' Nfrus=',Nfrus, ' Tbbfit  Lb BB:',Tbbfit*UTp,LB,BB;
C-   endif;
      else
      Tbbfit=Twien
C-       write(*,'(a,i5,a,1p,e12.3)')' Nrec=',Nrec, ' Tbbfit=Twien',Tbbfit*UTp;
      endif
      Tbb=Tbbfit*UTp
C
C   If(Nrec>=357 & Nrec <=362) then;
C--     write(*,'(a,2i5,a,1p,e12.3)')' Nstep Nrec=',nnx,Nrec, ' Tbb=',Tbb;
C     read(*,*);
C   endif;
C  *
C- finding frbb as Sasha did :
      LB=0.D0
      BB=0.D0
      DO09894j=1,Mfreq-1
      Xpl(j)=hplanck1*numn(j)/(boltzk*Tbb)
      bBlack=2.d0*hplanck1*(numn(j))**3*exp(-Xpl(j))/(Cs**2*(1.d0-exp(-Xpl(j))))
      LB=LB+alumnu(j)*bBlack
      BB=BB+(bBlack)**2
09894 CONTINUE
      frbb=LB/BB
C- write(*,*) 'frbb ',frbb;
C-    Tbb(Nrec)=Tbb;
      rbb=0
C- get Infinity's sqrt(frbb*1.d+01**Clumnu/(4.d0*pi**2));
C-      rbb=rbb/UR;
C-      call ubv;      <* use bb ubv.trf *>
C:      *
C: the flux from a star at zero magnitude *
C- The flux at zero magnitude for the infrared bands was taken from
C- Wilson, Schwartz, Neugebauer, Harvey and Becklin, 1972, ApJ 177:523-540,
C- who extrapolated the absolute spectrophotometry of Vega
C- by Oke and Schild, ApJ 161(1970)1015
C- using a model atmosphere by Schild, Peterson and Oke.
C-      UF0 = -48.6075 - U0;
C-      BF0 = -48.6075 - B0;
C-      VF0 = -48.6075 - V0;
C- cf ubvri.trf by Elka Sorokina !!!
C- from Allen
C-      UF0 = -13.87;
C-      BF0 = -12.97;
C-      VF0 = -13.74;
C- The same derived from Eastman program
C- as 2.5 \lg( c \int (\Phi(\lambda)/\lambda^2) d \lambda ) - 48.6075 + magcorr
      UF0=-13.90
      BF0=-13.00
      VF0=-13.72
      RF0=-13.66
      IF0=-14.42
C- SCALE=-2.5D0*DLOG10(CFLUX*( RY(NZON-1)*UR/(10.d0*UPC) )**2);
      SCALE=-2.5D0*DLOG10(CFLUX*(UR/(10.d0*UPC))**2)
C- Ry**2 in Flsav
      freqfind=.false.
      If(.NOT.freqfind)then
C- only one time
      DO09891i=1,NPTSU
      Lubv=NFREQ
09888 IF(.NOT.(Lubv.GT.1.AND.freqob(Lubv).GT.CCL/WLU(i)))GOTO09887
      Lubv=Lubv-1
      GOTO09888
09887 CONTINUE
C- freqob(Lubv) <= CCL/@WLX(i) OR Lubv==1
      indfreq(i,1)=Lubv
09891 CONTINUE
      DO09885i=1,NPTSB
      Lubv=NFREQ
09882 IF(.NOT.(Lubv.GT.1.AND.freqob(Lubv).GT.CCL/WLB(i)))GOTO09881
      Lubv=Lubv-1
      GOTO09882
09881 CONTINUE
C- freqob(Lubv) <= CCL/@WLX(i) OR Lubv==1
      indfreq(i,2)=Lubv
09885 CONTINUE
      DO09879i=1,NPTSV
      Lubv=NFREQ
09876 IF(.NOT.(Lubv.GT.1.AND.freqob(Lubv).GT.CCL/WLV(i)))GOTO09875
      Lubv=Lubv-1
      GOTO09876
09875 CONTINUE
C- freqob(Lubv) <= CCL/@WLX(i) OR Lubv==1
      indfreq(i,3)=Lubv
09879 CONTINUE
      DO09873i=1,NPTSR
      Lubv=NFREQ
09870 IF(.NOT.(Lubv.GT.1.AND.freqob(Lubv).GT.CCL/WLR(i)))GOTO09869
      Lubv=Lubv-1
      GOTO09870
09869 CONTINUE
C- freqob(Lubv) <= CCL/@WLX(i) OR Lubv==1
      indfreq(i,4)=Lubv
09873 CONTINUE
      DO09867i=1,NPTSI
      Lubv=NFREQ
09864 IF(.NOT.(Lubv.GT.1.AND.freqob(Lubv).GT.CCL/WLI(i)))GOTO09863
      Lubv=Lubv-1
      GOTO09864
09863 CONTINUE
C- freqob(Lubv) <= CCL/@WLX(i) OR Lubv==1
      indfreq(i,5)=Lubv
09867 CONTINUE
      freqfind=.true.
      endif
      FLXAVG=0.d0
      wlstep=(WLU(2)-WLU(1))/CCL
      sumfhx=0.d0
      DO09861i=2,NPTSU-1
      Lfr=indfreq(i,1)
      FHobs=max(Flsave(Lfr,Jsave),1.d-100)
      FHobs1=max(Flsave(Lfr+1,Jsave),1.d-100)
      If(Lfr.LT.NFRUS)Then
      FHX=EXP(LOG(ABS(FHobs1))+LOG(ABS(FHobs/FHobs1))*DLOGNU(Lfr)*LOG((CCL/WLU(i))/freqob(Lfr+1)))
      else
      FHX=ABS(FHobs)
      endif
      FHX=FHX*TU(i)*(CCL/WLU(i))**5
      stepn=(WLU(i+1)-WLU(i))/CCL
      if(abs(wlstep-stepn)/wlstep.LT.1.d-4.AND.i.NE.NPTSU-1)then
      sumfhx=sumfhx+FHX
      else
      FLXAVG=FLXAVG+sumfhx*wlstep+FHX*(wlstep+stepn)/2.d0
      wlstep=stepn
      sumfhx=0.d0
      endif
09861 CONTINUE
      AMAGX=-2.5D+00*DLOG10(FLXAVG)+UF0+SCALE
      MU=AMAGX
      FLXAVG=0.d0
      wlstep=(WLB(2)-WLB(1))/CCL
      sumfhx=0.d0
      DO09858i=2,NPTSB-1
      Lfr=indfreq(i,2)
      FHobs=max(Flsave(Lfr,Jsave),1.d-100)
      FHobs1=max(Flsave(Lfr+1,Jsave),1.d-100)
      If(Lfr.LT.NFRUS)Then
      FHX=EXP(LOG(ABS(FHobs1))+LOG(ABS(FHobs/FHobs1))*DLOGNU(Lfr)*LOG((CCL/WLB(i))/freqob(Lfr+1)))
      else
      FHX=ABS(FHobs)
      endif
      FHX=FHX*TB(i)*(CCL/WLB(i))**5
      stepn=(WLB(i+1)-WLB(i))/CCL
      if(abs(wlstep-stepn)/wlstep.LT.1.d-4.AND.i.NE.NPTSB-1)then
      sumfhx=sumfhx+FHX
      else
      FLXAVG=FLXAVG+sumfhx*wlstep+FHX*(wlstep+stepn)/2.d0
      wlstep=stepn
      sumfhx=0.d0
      endif
09858 CONTINUE
      AMAGX=-2.5D+00*DLOG10(FLXAVG)+BF0+SCALE
      MB=AMAGX
      FLXAVG=0.d0
      wlstep=(WLV(2)-WLV(1))/CCL
      sumfhx=0.d0
      DO09855i=2,NPTSV-1
      Lfr=indfreq(i,3)
      FHobs=max(Flsave(Lfr,Jsave),1.d-100)
      FHobs1=max(Flsave(Lfr+1,Jsave),1.d-100)
      If(Lfr.LT.NFRUS)Then
      FHX=EXP(LOG(ABS(FHobs1))+LOG(ABS(FHobs/FHobs1))*DLOGNU(Lfr)*LOG((CCL/WLV(i))/freqob(Lfr+1)))
      else
      FHX=ABS(FHobs)
      endif
      FHX=FHX*TV(i)*(CCL/WLV(i))**5
      stepn=(WLV(i+1)-WLV(i))/CCL
      if(abs(wlstep-stepn)/wlstep.LT.1.d-4.AND.i.NE.NPTSV-1)then
      sumfhx=sumfhx+FHX
      else
      FLXAVG=FLXAVG+sumfhx*wlstep+FHX*(wlstep+stepn)/2.d0
      wlstep=stepn
      sumfhx=0.d0
      endif
09855 CONTINUE
      AMAGX=-2.5D+00*DLOG10(FLXAVG)+VF0+SCALE
      MV=AMAGX
      FLXAVG=0.d0
      wlstep=(WLR(2)-WLR(1))/CCL
      sumfhx=0.d0
      DO09852i=2,NPTSR-1
      Lfr=indfreq(i,4)
      FHobs=max(Flsave(Lfr,Jsave),1.d-100)
      FHobs1=max(Flsave(Lfr+1,Jsave),1.d-100)
      If(Lfr.LT.NFRUS)Then
      FHX=EXP(LOG(ABS(FHobs1))+LOG(ABS(FHobs/FHobs1))*DLOGNU(Lfr)*LOG((CCL/WLR(i))/freqob(Lfr+1)))
      else
      FHX=ABS(FHobs)
      endif
      FHX=FHX*TR(i)*(CCL/WLR(i))**5
      stepn=(WLR(i+1)-WLR(i))/CCL
      if(abs(wlstep-stepn)/wlstep.LT.1.d-4.AND.i.NE.NPTSR-1)then
      sumfhx=sumfhx+FHX
      else
      FLXAVG=FLXAVG+sumfhx*wlstep+FHX*(wlstep+stepn)/2.d0
      wlstep=stepn
      sumfhx=0.d0
      endif
09852 CONTINUE
      AMAGX=-2.5D+00*DLOG10(FLXAVG)+RF0+SCALE
      MR=AMAGX
      FLXAVG=0.d0
      wlstep=(WLI(2)-WLI(1))/CCL
      sumfhx=0.d0
      DO09849i=2,NPTSI-1
      Lfr=indfreq(i,5)
      FHobs=max(Flsave(Lfr,Jsave),1.d-100)
      FHobs1=max(Flsave(Lfr+1,Jsave),1.d-100)
      If(Lfr.LT.NFRUS)Then
      FHX=EXP(LOG(ABS(FHobs1))+LOG(ABS(FHobs/FHobs1))*DLOGNU(Lfr)*LOG((CCL/WLI(i))/freqob(Lfr+1)))
      else
      FHX=ABS(FHobs)
      endif
      FHX=FHX*TI(i)*(CCL/WLI(i))**5
      stepn=(WLI(i+1)-WLI(i))/CCL
      if(abs(wlstep-stepn)/wlstep.LT.1.d-4.AND.i.NE.NPTSI-1)then
      sumfhx=sumfhx+FHX
      else
      FLXAVG=FLXAVG+sumfhx*wlstep+FHX*(wlstep+stepn)/2.d0
      wlstep=stepn
      sumfhx=0.d0
      endif
09849 CONTINUE
      AMAGX=-2.5D+00*DLOG10(FLXAVG)+IF0+SCALE
      MI=AMAGX
C-      rbb=rbb*UR;
      Mbol=worky(4,nnx)
C- from Obslum=CLUMF*Obslum*Ry(NZON-1)**2 in
C- Lbalrad with account of the 1st order u/c
      deptt=worky(8,nnx)
C- gamma deposition in units 1e50 erg/s
C- vFe=1.0; -- velocity for location where tau_FeII_5169 = 2/3
      vFe=Uy(Nthick(21))
C- 21 is current freq bin for FeII 5169
      write(4,'(F15.10,1p,5e11.3,0p,7f8.3,1p,e11.3)')time_n,Tbb,vFe,
C- if we write Tbb-bb for average spectrum, there is not much sense to
     *
C- output rbb-bb
     *1e3*worky(1,nnx),UR*worky(2,nnx),
C- Teff & r last scatering -- crude
     *
C-       Teff is saved in Tcurv in units of 1e3 K
     *UR*flsave(Mfreq,JSAVE),
C- Rphtau
     *Mbol,MU,MB,MV,MI,MR,Mbolavg,deptt
C-      write(*,*) 'Tbb=',Tbb,' rbb=', rbb;
C-      WRITE (*,99999);
      NNAG=2
      XC05(1)=Tbb
C- Tbb
C-      XC05(1) = log(Tbb);
      XC05(2)=0.d0
C- A_V
      IA=2
      iwbb=NNAG*(5+2*NNAG)
C-         Xtol = 1.D-6;
      Xtol=1.D-3
C-    DELTAbb = DSQRT(1.D4*Xtol);
      DELTAbb=1.D-5
C-    factorstep = 5.0d2;
      factorstep=1.05D0
      MAXCAL=600
      IPRINT=20
      ITRES=0
Cfindabs* the same only with absorbtion*
C
C      write(@wres,'(F15.10,1p,5e11.3,0p,6f10.3)') time_n, Tbb, rbb,
C         1e3*worky(1,nnx),UR*worky(2,nnx), -- Teff & r last scatering -- crude
C--       Teff is saved in Tcurv in units of 1e3 K
C         UR*flsave(Mfreq,JSAVE), -- Rphtau
C         Mbol, MU, MB, MV, MI, MR;
C--         Mbol, MU, MB, MV;
C  *
C-      write (*,*) Av, Tbb;
C-  _fi
C-      write (*,'(1p,e20.8,i6,0p,200f10.3)') time_n, nfrus, (alumnu(i),i=1,nfreq);
C-      write (*,'(1p,e20.8,i6,200e10.3)') time_n, nfrus, (alumnu(i),i=1,nfrus);
C:         *
99999 FORMAT(' C05NCF PROGRAM RESULTS'/1X)
99998 FORMAT(' FINAL NORM IS ',1P,G12.5,'    ITRY=',I3)
99997 FORMAT(' AT THE POINT ',2G18.10)
99996 FORMAT(' WITH RESIDS ',12X,2G12.5)
99995 FORMAT(' AND WITH ERROR NUMBER ',I3)
      Endif
09960 CONTINUE
      IF(.NOT.(Lunit.EQ.-1))GOTO09963
99    continue
      close(50)
C-   @wterm ' Total Records :', Nrec, ' with relative accuracy ',@CRITVL;
09998 continue
C: *
      close(4)
C- result file, here it's *.tt
      close(8)
C- data file
      close(9)
C- model file (stradio)
      close(10)
C- prf file (stradio)
      close(11)
C- crv file (stradio)
      close(22)
C- deposition   (stradio)
      close(23)
C- outgoing fluxes (stradio)
      close(28)
C- binary file with Ni distribution
C- check what is not closed in strad
      end
C: subroutine *
C: Double Precision version  *
C: Subroutine RESID - RESIDUALS OF test EQUATIONS *
      SUBROUTINERESID(NNAG,XC05,RC,IFLAG)
      IMPLICITREAL*8(A-H,O-Z)
C-      @wterm  "print*,";
C-NVARS - number of independent variables
      PARAMETER(NVARS=3)
C- 3 - NOCONV,4 - CONV
      include '../obj/nfreq_and_mzone.inc'
C-  PARAMETER(Mzon=90); -- h toy model
C- PARAMETER(Mzon=171); -- zoning for W7
C- PARAMETER(Mzon=340); -- zoning for W7+wind
C-PARAMETER(Mzon=86); -- zoning for W7fhh+wind
C-PARAMETER(Mzon=43); -- zoning for W7fhh
C-   PARAMETER (Mzon=521); -- zoning for ntomi Crab model
      PARAMETER(NYDIM=(NVARS+2*NFREQ)*Mzon,MAXDER=4)
C- PARAMETER(NYDIM=2*NFREQ*Mzon,MAXDER=4);
C- Nydim must be  2*(@Npe+@Npc)*Mzon  to use in Feau
C- PARAMETER(NYDIM=2*(@Npe+@Npc)*Mzon,MAXDER=4); -- to use in Feau
      Parameter(Is=5)
C- for test -- chego???
C-   PARAMETER (NZ=1200000); --  for Nfreq=200, Mzon=200
      PARAMETER(NZ=3000000)
C-  for Nfreq=100, Mzon=600
      Parameter(Nstage=28,Natom=15)
      PARAMETER(KOMAX=80)
C-MAX NUMBER OF STEPS IN PRESCRIBED MOMENTS
      LogicalLSYSTEM
C- /.TRUE./; -- for IBM
      Parameter(LSystem=.FALSE.)
      Parameter(Pi=3.1415926535897932d+00,hPlanc=1.0545716280D-27,Cs=2.9979245800D+10,Boltzk=1.3806504000D-16,Avogar=6.0221417900D+2
     *3,AMbrun=1.6605387832D-24,AMelec=9.1093821500D-28,echarg=4.8032042700D-10,CG=6.6742800000D-08,CMS=1.9884000000D+33,RSol=6.9551
     *000000D+10,ULGR=1.4000000000D+01,UPURS=1.0000000000D+07,ULGPU=7.0000000000D+00,ULGEU=1.3000000000D+01,UPC=3.0856776000D+18,UTP
     *=1.0000000000D+05,URHO=1.0000000000D-06,CARAD=7.5657680191D-15,CSIGM=5.6704004778D-05,ERGEV=1.6021764864D-12,GRADeV=1.16045052
     *85D+04,RADC=7.5657680191D-02,CTOMP=4.0062048575D-01,CCAPS=2.6901213726D+01,CCAPZ=9.8964034725D+00)
      IntegerZn(Natom),ZnCo(Natom+1)
      DimensionAZ(Natom)
      Common/AZZn/AZ,Zn,ZnCo
C
C      include for eve and strad
C*
      Common/NiAdap/tday,t_eve,XNifor(Mzon),AMeveNi,KNadap
      LOGICALFRST
      Parameter(Mfreq=130)
C- think about max Nfreq !
      Common/Kmzon/km,kmhap,Jac,FRST
C-   Common/NiAdap/tday,t_eve,XNifor(Mzon),AMeveNi,KNadap; -- must go to commonEve.inc
C- since it enters also bgcon*trf and is forgotten there
      COMMON/STCOM1/t,H,HMIN,HMAX,EPS,N,METH,KFLAG,JSTART
      COMMON/YMAX/YMAX(NYDIM)
      COMMON/YSTIF/Y(NYDIM,MAXDER+1)
      COMMON/HNUSED/HUSED,NQUSED,NFUN,NJAC,NITER,NFAIL
      COMMON/HNT/HNT(7)
C- FOR COSETBGH
      PARAMETER(DELTA=1.d-05)
C- DISTURBANCE CONSTANT standard was 1.d-04
C- cannot be less ~1.d-6 since opacity is saved in single precision
C-   PARAMETER (LICN=4*NZ,LIRN=8*NZ/5); -- FOR F01BRF, M28Y12
      PARAMETER(LICN=4*NZ,LIRN=2*NZ)
C- FOR F01BRF, M28Y12
C- maximum LIRN=2*NZ
      LogicalNEEDBR
C- F01BRF or M28Y12 needed
      COMMON/STJAC/THRMAT,HL,AJAC(LICN),IRN(LIRN),ICN(LICN),WJAC(NYDIM),FSAVE(NYDIM*2),IKEEP(5*NYDIM),IW(8*NYDIM),IDISP(11),NZMOD,NE
     *EDBR
      LOGICALCONV,
C- .TRUE. IF CONVECTION IS INCLUDED
     *CHNCND,
C- .TRUE. IF NCND IS CHANGED
     *SCAT,
C- .TRUE. IF Scattering included (Hapabs^=Happa)
     *SEP
C- .TRUE. IF absorption and scattering are in separate files
C-           (i.e. absorption without expansion effect)
      COMMON/CUTOFF/FLOOR(NVARS+1),Wacc(NVARS+1),FitTau,TauTol,Rvis,CONV,CHNCND,SCAT,SEP
      LogicalLTHICK
      COMMON/THICK/LTHICK(Nfreq,Mzon)
      COMMON/CONVEC/UC(Mzon),YAINV(Mzon)
      COMMON/RAD/EDDJ(Mzon,Nfreq),EDDH(Mzon),HEDD(Nfreq),HEDRAD,CLIGHT,CKRAD,UFREQ,CFLUX,CCL,CLUM,CLUMF,CIMP,NTHICK(NFREQ),NTHNEW(NF
     *REQ),bolM,NCND,KRAD,NFRUS
C- KRAD=(Mzon-NCND)*NFRUS IN STELLA
      LOGICALEDTM
C- Eddington factors time-dependent==.true.
      COMMON/RADOLD/HEDOLD,HINEDD,EDTM
      Common/newedd/EddN(Mzon,Nfreq),HEdN(Nfreq),tfeau
C- for EDTM==T
      Common/oldedd/EddO(Mzon,Nfreq),HEdo(Nfreq),trlx
C- for EDTM==T
      Common/cnlast/Cnlast
      Common/Dhap/DHaphR(Mzon,Nfreq)
      COMMON/BAND/FREQ(NFREQ+1),
C- frequency bins boundaries,
     *
C- frequency in units of h/(k*Tpunit)
     *FREQMN(NFREQ),
C- frequency mean (middle of bin)
     *WEIGHT(130),
C- bandwidth*freq(mean)**3
     *HAPPAL(NFREQ),
C- dimens-less kappa for Ron's absorp.+scatt.
     *HAPABSRON(NFREQ),
C- dimens-less kappa for Ron's absorption
     *HAPABS(NFREQ),
C- dimens-less kappa for S-B absorption
     *DLOGNU(NFREQ)
C- (log step in frequency)**-1
C- PARAMETER(NFRMIN=Nfreq/5); -- MINIMUM NFRUS
      PARAMETER(NFRMIN=Nfreq/2)
C- MINIMUM NFRUS
      IntegerdLfrMax
      Common/observer/wH(Mfreq),cH(Mfreq),zerfr,Hcom(Mfreq),Hobs(Mfreq),freqob(Mfreq),dLfrMax
      Parameter(NP=15+15-1)
C- Total number of tangent rays
      Common/famu/fstatic(0:NP+1,Nfreq),fobs_corr(0:NP+1,Mfreq),fcom(0:NP+1,Mfreq),amustatic(0:NP+1)
      Common/rays/Pray(0:Np+1),fout(0:NP+1,Mfreq),abermu(0:NP+1),NmuNzon
C- fout probably not needed
      COMMON/LIM/Uplim,Haplim
C- to BEGRAD
      COMMON/AMM/DMIN,DM(Mzon),DMOUT,AMINI,AM(Mzon),AMOUT
C- exactly as in VELTEM
      COMMON/Centr/RCE,Nzon
C- central radius & current Number of zones
      Common/InEn/AMHT,EBurst,tBurst,tbeght
C- Mass of Heated Core, Energy & time
      COMMON/RADPUM/AMNI,XMNi,XNi,KmNick
C- MASS OF Ni CORE, Ni ABUNDANCE
      COMMON/RADGAM/FJgam(Mzon,2),toldg,tnewg
C- zero-moment for gamma-radiation
C- 1 for old time (toldg)      2 for present time (tnewg)
      COMMON/RADGlg/FJglog(Mzon,2)
C- log FJgam
      COMMON/CHEM/CHEM0(Mzon),RTphi(0:Mzon+1),EpsUq
      COMMON/REGIME/NREG(Mzon)
      doubleprecisionNRT
      COMMON/AQ/AQ,BQ,DRT,NRT
C- BQ pseudo-viscosity for R-T
C- DRT is the mass distance or optical thickness
C- and used for weight in artificial viscosity
C- NRT is the power in pseudo-viscosity (may be noninteger)
      COMMON/AZNUC/ACARB,ZCARB,ASI,ZSI,ANI,ZNI,QCSI,QSINI
      COMMON/QNRGYE/QNUC,RGASA,YELECT
C-   COMMON/CKN1/CK1,CK2,CFR,CRAP;
      COMMON/CKN1/CK1,CK2,CFR,CRAP,CRAOLD
      LOGICALEVALJA,
C- EVALUATE JACOBIAN
     *OLDJAC,
C- JACOBIAN MAY NEED UPDATING
     *BADSTE
C- BAD STEP: RETURNED BY DIFMAT - TRY SMALLER
      COMMON/EVAL/EVALJA,BADSTE,OLDJAC
      LogicalRadP
      COMMON/RadP/RadP
      COMMON/ARG/TP,PL,CHEM,LST,KENTR,JURS
      COMMON/RESULT/P,Egas,Sgas,ENG,CAPPA,PT,ET,ST,ENGT,CAPT,NZR
      COMMON/ABUND/XYZA,Yat(Natom)
      COMMON/AZ/AS,ZS,SCN
      COMMON/STR/PPL,EPL,SPL,ENGPL,CAPPL,CP,GAM,DA,DPE,DSE,DSP,BETgas
      COMMON/XELECT/XE,XET,XEPL,PE,Ycomp
      COMMON/URScap/Tpsqrt,Psicap,Scap,ScapT,ScapPl,ZMean,YZMean,ZMT,ZMPl,YZMT,YZMPl
      COMMON/BURNCC/CC,CCTP,CCPL,YDOT
      COMMON/ABarr/YABUN(Natom,Mzon)
C- UNITS:
      COMMON/UNSTL/UL,UPRESS,UE,UEPS,UCAP,UTIME,UV,UFLUX,UP
      COMMON/TAIL/KTAIL
      COMMON/UNINV/UPI,UEI
C- 1./UP, 1./UE
      COMMON/UNBSTL/UR,UM,UEPRI,ULGP,ULGE,ULGV,ULGTM,ULGEST,ULGFL,ULGCAP,ULGEPS
      COMMON/CONUR/EIT,DST,BBRCNR(5)
      COMMON/BAL/EL(MAXDER+1),YENTOT(MAXDER+1),ETOT0,ELVOL,ELSURF,ELTOT,TPSURF,HOLDBL,ELOST,EKO,RADBEG
      common/NSTEP/NSTEP,NDebug,MAXER,IOUT,
C- IOUT      LINE PRINT INTERVAL
     *NOUT
C- NOUT      PRINT STEP
      common/CREAD/TAUOLD,NSTMAX,MBATCH,MAXORD
      common/debug/LfrDebug,Nperturb,Kbad
      REAL*8TPMAX(MAXDER+1),TQ(4)
      COMMON/TAU/TAU(Mzon+1),FLUX(Mzon)
      common/tauubvri/tauU(Mzon),tauB(Mzon),tauV(Mzon),tauR(Mzon),tauI(Mzon)
      COMMON/PHOT/XJPH,DMPH,RPH,TPH,PLPH,VPH,CHEMPH,GRVPH,HP,JPH
      PARAMETER(NFUNC=6)
      REAL*4WORK(Mzon+2,NFREQ)
CNFUNC IF NFREQ < NFUNC*
     *,WRK(Mzon,4)
      REAL*8WRKX(Mzon),WORKX(Mzon+2)
      COMMON/STEPD/WRKX,WORKX,TPHOT,TEFF,WORK,WRK,NPHOT,NZM
C       1 - LG(T), 2 - LG(PL), 3 - LG(P), 4 - LG(S)      *
      PARAMETER(TMCRIT=1.D-6,TPNSE=5.D0,EPGROW=0.02D0)
      Common/RUTP/Ry(Mzon),Uy(Mzon),Ty(Mzon),Press(Mzon),Rho(Mzon)
      COMMON/TOO/TOO,KO,KNTO,TO(KOMAX),STO(KOMAX),NTO(KOMAX)
      Parameter(Lcurdm=1000)
C- Dimension of the Tcurv array
      RealTcurv
      IntegerNFRUSED
C- an integer array which store exact number of used freqs
      REAL*8Flsave
C- remove this to read old flx files!
      Common/Curve/tcurv(8,Lcurdm),Depos(Lcurdm),Flsave(MFREQ+1,Lcurdm),NFRUSED(Lcurdm),Lsaved
      LOGICALBEGRUN
      Common/BEGR/BEGRUN
      CHARACTER*80Model,Sumprf,Sumcur,Depfile,Flxfile
      COMMON/Files/Model,Sumprf,Sumcur,Depfile,Flxfile
      CHARACTER*1app
C- dummy var for constructing of Opafile
      LogicalGivdtl
      Common/ABGrap/NSTA,NSTB,TcurA,TcurB,Givdtl
C-No. of steps & Time in days
      REAL*8MBOL,MU,MB,MV,MR,MI,MBOL1
      COMMON/COLOR/MBOL,MU,MB,MV,MR,MI,UMB,BMV,MBOL1,LubvU,LubvB,LubvV,LubvR,LubvI,Lyman
      COMMON/DETAIL/QRTarr(Mzon),UUarr(Mzon),ArrLum(Mzon),Acc(Mzon)
      Common/XYZ/XA,YA,URM
C- _define @Mfreq  150
C-_define @Mfreq  126
C- parameter (Tbba=2000.d0,epsbb=1.d-3);
      parameter(Tbba=1.d04,epsbb=1.d-3)
C-Parameter(Mfreq=@Mfreq);
C- think about max Nfreq !
      real*8alumnu(Mfreq),Blc(Mfreq),Ab(Mfreq),nu(Mfreq),numn(Mfreq),Xpl(Mfreq),wbb(Mfreq)
      common/frq/alumnu,Blc,Ab,nu,numn,R14,frbba
C-     CALLED BY C05NAF
C-     CALCULATES VALUES OF RESIDUALS RC AT XC05,.
C-     WHERE XC05(1)=LN(YP), XC05(2)=LN(YN)
      INTEGERNNAG
      DimensionXC05(NNAG),RC(NNAG)
      Real*8LBa,frbba
      hplanck1=2.d0*pi*hplanc
      ITRES=ITRES+1
      IFLAG=0
C- XC05(1) -- Tbb
C- XC05(2) -- A_V
      Tbb=XC05(1)
C- Tbb=exp(XC05(1));
      Av=XC05(2)
C-       if(Tbb<0.d0 .or. Tbb>1.d7 .or. abs(Av)>1.d2)then;
C-         Iflag=-1;
C-         pause;
C-       else;
C: residuals with absorbtion*
      DO09846j=1,nfrus-1
C-  _do j=28,33;
C-  write(*,'(a,i3,1p,2e15.3)') ' in resid nfrus Tbb Av=',nfrus,Tbb,Av;
C-  write(*,'(a,i3,1p,2e15.3)') ' j Cs numn(j) ',j, Cs, numn(j);
      Ab(j)=exp(-0.92d0*Av*(-.32d0+0.725d-4/Cs*numn(j)))
C- Ab(j)=exp(-0.92d0*(Av-1.38d0*(1.d0-5.5d-5/Cs*numn(j))));
C-Ab(j)=1.d0;
09846 CONTINUE
      LBa=0.d0
      BBa=0.d0
      DO09843j=1,Mfreq-1
C-  _do j=28,33;
      Xpl(j)=hplanck1*numn(j)/(boltzk*Tbb)
      Blc(j)=2.d0*hplanck1*(numn(j))**3*exp(-Xpl(j))/(Cs**2*(1.d0-exp(-Xpl(j))))
      LBa=LBa+alumnu(j)*Ab(j)*Blc(j)*(nu(j+1)-nu(j))
      BBa=BBa+Blc(j)**2*Ab(j)**2*(nu(j+1)-nu(j))
C-    write(*,'(a,i5,1p,4e12.3)') ' in resid j alumnu(j)=',
C-       j,Xpl(j),Blc(j),numn(j),nu(j);
C-       j,alumnu(j),Ab(j),LBa,BBa;
C-  write(*,*) ' in resid Xpl(j)=',Xpl(j);
09843 CONTINUE
C-  pause;
      frbba=LBa/BBa
      F1=0.d0
      F2=0.d0
C-  snorm=0.d0;
      snorm=1.d0
      DO09840j=1,Mfreq-1
C-  _do j=28,33;
C-    snorm=snorm+(alumnu(j))*Blc(j)*Ab(j)*(nu(j+1)-nu(j));
      F1=F1+(alumnu(j)-frbba*Ab(j)*Blc(j))*Blc(j)*Ab(j)*(-.32d0+.725d-4/Cs*numn(j))*(nu(j+1)-nu(j))
      F2=F2+(alumnu(j)-frbba*Ab(j)*Blc(j))*Blc(j)*Ab(j)*(nu(j+1)-nu(j))*Xpl(j)/(Tbb*(1.d0-exp(-Xpl(j))))
09840 CONTINUE
      F1=F1/snorm
      F2=F2/snorm
C-write(*,*) ' F1=',F1, '  F2=',F2;
      RC(1)=F1
      RC(2)=F2
C-       endif;
      RETURN
      END
