-- Equation of state for Natom atoms in Saha approximation +
-- one mean ion
-- Saha according Alan H. Karp
--     J.Quant.Spectrosc.Radiat.Transfer 23 (1980) 285-290
-- input temperature Tp in 1.e+5 K, density in 1.e-6 g/cm**3
-- in COMMON/ARG/ in STATEQ INCLUDE
--_TRACE "WRITE(5,*)' ZMEAN=',ZMEAN,'   HIGH=',HIGH,"
  SUBROUTINE URSOSZ;
  IMPlICIT REAL*8 (A-H,O-Z);
  _INCLUDE zone;
  _INCLUDE fundrad;
  _INCLUDE stateq;
 <*VAR: Variables, COMMON & DATA 
       INCLUDE sahaz  *>;
  _Proc @SAHA;
    <*SAHA: *>;
  _Return;
  _Proc @DEGEN;
    <*DEGEN: *>;
  _Return;
  RPl=1.d0/Pl;
  RTp=1.d0/Tp;
  Tpsqrt=Tp*sqrt(Tp);
  Barnum=Pl*CAvD; -- number of barions per cm**3
  Rnbar=RPl*(1.d0/CAvD);  -- == 1.D0/Barnum;
  YZ=0.D0;
  _Do I=3, Natom;
     YZ=YZ+Yat(i);
  _Od;
  XYZA=YZ+Yat(1)+Yat(2);
  _SELECT
    _ Pl <= DLOW [ _CALL @SAHA; Psicap=0.d0 ]
    _ Pl >= DUP  [ _CALL @DEGEN; Xe=Ye; Psicap=Psi ]
    _OTHER       [ <*INTERPOL: between @SAHA and @DEGEN *> ]
  _END;
--PE=CRgas*Xe*Pl*Tp*1.D7; -- dlj Christy. VYKINUT@ !!!
  <*RADP: add radiative pressure *>;
  RETURN;
  END;
%_SAHA:
  Dsaha=log(Csaha*Tpsqrt*Rnbar);
  DLPOT=DSaha+1.d0;
  If((Tp*DLPOT)>Tpzb)then;
    <*Z: find mean ion ZMean & , XeZM, additions to  E, ET etc. *>;
    YZMean=XeZM/Zf;
  else;
    ZMean=0.D0; YZMean=0.D0; XeZM=0.D0; Egas=0.D0;
    If(LST^=0)Then;
      XeZMT=0.D0; ZMT=0.D0; WZMT=0.D0;
      XeZMPl=0.D0; ZMPl=0.D0; WZMPl=0.D0;
      PT=0.D0; ET=0.D0;
      PPl=0.D0; EPl=0.D0;
    endif;
  endif;
  If(Zf-ZMean>Epsurs*Zf)then;
    <*PROD: compute
          ADi(i)   - product of CSaha*Tp**1.5*weights*exp(-pion/Tp)
                      where
          Pion(j,i) - ionization potential for atom i at stage j
          Check validity of low ionization regime and put LOW=true
          if it holds.
          Check validity of high ionization regime and put HIGH=true
          if it holds *>;
  else;
     LOW=.false.; HIGH=.true.;
     Xe=Yat(1)+XeZM;
     _Do i=2,Natom;
       Xe=Xe+2.D0*Yat(i);
     _od;
     Scap=Yat(1)*Rgwr(1,1)+Yat(2)*Rgwr(2,2)*4.d0;
     ScapT=0.D0; ScapPl=0.D0;
  endif;
  NIT=0;
  If (^LOW & ^HIGH) Then;
    RXeold=0.d0;
    _While <*Errtest: the error is high *> & NIT<64 _do
--    Write (6,*)'   Rxeold=',Rxeold;
      RXeold=RXe;
      <*SUM:  compute sums
              alpha(i),
              dzeta(i), -- x(i) in Karp(1980)
              eta(i)    -- y(i) in Karp(1980)
              V AND U *>;
--    RXe=(Rxeold*V+1.D0)/(V+U); -- no account of XeZM
      RXe=abs((Rxeold*V+1.D0)/(V+U+XeZM));
      NIT=NIT+1;
    _od;
    If(NIT>=64)then;
      Write (6,*)' Iterations in SAHAZ fail to converge';
      Write (6,*)' Tp=',Tp,'  Pl=',Pl,'   Rxeold=',Rxeold,
              '   Rxe=',Rxe,'  epsurs=',epsurs;
      STOP;
    endif;
    Xe=1.d0/Rxe;
  Endif;
  Xe=max(Xe,Xeflo);
  <*IONS: compute Ani(i) according Saha if needed &
          find sums over ions for opacity: Scap *>;
  <*PE: pressure & energy *>;
  IF(LST^=0)THEN;
    <*DER: derivatives of P, E & Xe over Tp
           & derivatives over Pl (logarithmic for Egas, Xe) *>;
  ENDIF;
  CHEM=Xe;
--  Xe=Xe+XeZM;
%_SAHA.Z:
  If((Tp*DLPOT)*(1.D0+Epsurs)<Tpzf)then;
    ZMean=Zf*((Tp*DLPOT)-Tpzb)/(Tpzf-Tpzb);
    PotZM=(Tpzf-Tpzb)*ZMean/Zf+Tpzb;
    PotInt=(Tpzf-Tpzb)*ZMean**2/(2.d0*Zf)+Tpzb*ZMean;
    If(LST^=0)Then;
      ZMT=Zf*(DLPOT+1.5D0)/(Tpzf-Tpzb);
      ZMPl=-Zf*Tp/(Tpzf-Tpzb); -- dZmean/dlog(D)
      WZMT=ZMT/(Zf-ZMean);
                 -- CALL DVCHK(JCHK);IF(JCHK==1)THEN;STOP 33;ENDIF;
      WZMPl=ZMPl/(Zf-ZMean);
      XeZMT=YZ*ZMT;
      XeZMPl=ZMPl*YZ;          -- dXeZ/dlog(D)
    endif;
  else;
    ZMean=Zf;
    PotInt=(0.5d0*Zf)*(Tpzf+Tpzb);
    ZMT=0.D0; WZMT=0.D0;
    ZMPl=0.D0; WZMPl=0.D0;
    XeZMT=0.D0;
    XeZMPl=0.D0;
  endif;
  XeZM=ZMean*YZ;
  Egas=CRgas*YZ*PotInt;
  If(LST^=0)Then;
    PT=0.D0;
    ET=CRgas*XeZMT*PotZM;
    PPl=0.D0;
    EPl=CRgas*XeZMPl*PotZM;  -- dEgas/dlog(D)
 /* PTST=CRgas*(XeZM)*Pl*Tp;
    PTTST=CRgas*(XeZM+Tp*XeZMT)*Pl;
    EPlTST=EPl+CRgas*(1.5D0*Tp*XeZMPl);
    DPETST=(EPlTST+Tp*PTTST*RPl)*(Pl/PTST)-1.D0;
    WRITE(5,'(A,1P,G12.3)')' DPETST=',DPETST;*/
  endif;
%_SAHA_PROD:
  If(exp(Dsaha-Pionup*RTp)*epsurs>1.d0)then;
     LOW=.FALSE.;HIGH=.TRUE.;
     Xe=XeZM+Yat(1);
     _Do i=2,Natom;
        Xe=Xe+dble(Nstagez)*Yat(i);
     _od;
  else;
     Asum=0.d0; -- for low ionization regime
     -- We cannot take only one atom with low Pion here
     -- since LOW me be true when the density is high and
     -- all exponents are of the same order
     _Do i=1,Natom;
       AD1(i)=exp(Dsaha-Pion(1,i)*RTp+GWl(1,i));
       Asum=Asum+AD1(i)*Yat(i);
     _od;
     If( Asum < EpsLOW) Then;
        LOW=.TRUE.; HIGH=.FALSE.;
        Xe=Sqrt( Asum );
        XeLOW=Sqrt( Asum );
     else;
        Xe=CHEM;      -- initial approximation for iterations
        LOW=.FALSE.;HIGH=.FALSE.;
        _Do i=2,Natom;
             AD2(i)=AD1(i)*exp(Dsaha-Pion(2,i)*RTp+GWl(2,i));
        _od;
     endif;
     RXe=1.d0/(max(Xe,Xeflo));
  endif;
%_SAHA_Errtest:O
  ABS(Rxeold-Rxe)>epsurs*Rxe
%_SAHA_SUM:
--  Rne=1.d0/Ane;
  AR1(1)=AD1(1)*Rxe;
  alpha=1.d0/(1.d0+AR1(1));
  Yal(1)=Yat(1)*alpha;
  al(1)=alpha;
  eta=AR1(1)*alpha; -- ==dzeta*alpha
  U=Yat(1)*eta;
  Yaldz(1)=U;
  V=U-U*eta;
  _Do i=2,Natom;
      AR1(i)=AD1(i)*RXe;
      AR2(i)=(AD2(i)*RXe)*RXe;
      alpha=1.d0/(1.d0+AR2(i)+AR1(i));
      al(i)=alpha;
      Yal(i)=Yat(i)*alpha;
      dzeta=2.D0*AR2(i)+AR1(i);
      eta=2.D0*AR2(i)+dzeta;
      Yaldz(i)=Yal(i)*dzeta;
      U=U+Yaldz(i);
      V=V+Yal(i)*(eta-dzeta*(dzeta*alpha));
  _od;
%_SAHA_IONS:
  /*  Ane=Xe*Barnum;
      _select
       _ LOW  [ Ane=Xe*Barnum ]
       _ HIGH [ Ane=Xe*Barnum ]
       _other [ Xe=1.d0/Rxe; Ane=Xe*Barnum ]
      _end; */
  If (HIGH) Then;
     Xion(1,1)=1.D0;
     Xion(1,2)=0.D0;
     Xion(2,2)=1.D0;
     Scap=Yat(1)*Rgwr(1,1)+Yat(2)*Rgwr(2,2)*4.d0;
     ScapZZ=0.D0;
     _do i=3,Natom;
       ScapZZ=ScapZZ+Yat(i)*(1.d0-ZMean/Zf)*Rgwr(2,i)*4.d0;
       Xion(1,i)=0.D0;
       Xion(2,i)=1.D0;
     _od;
     Scap=Scap+ScapZZ;
  elseif(LOW)Then;
     Xion(1,1)=AD1(1)*RXe;
     Scap=0.D0;
     _do i=1,Natom;
       Scap=Scap+Yat(i)*AD1(i)*Rgwr(1,i);
       Xion(1,i)=AD1(i)*RXe;
       Xion(2,i)=0.D0;
     _od;
     Scap=Scap*RXe;
  else;
     Xion(1,1)=Ar1(1)*al(1);
     Xion(1,2)=Ar1(2)*al(2);
     Xion(2,2)=Ar2(2)*al(2);
     Scap=Yal(1)*Ar1(1)*Rgwr(1,1)
           +Yal(2)*(Ar1(2)*Rgwr(1,2)+Ar2(2)*Rgwr(2,2)*4.d0);
     ScapZZ=0.D0;
     _do i=3,Natom;
       ScapZZ=ScapZZ+Yal(i)*(1.d0-ZMean/Zf)
                       *(Ar1(i)*Rgwr(1,i)+Ar2(i)*Rgwr(2,i)*4.d0);
       Xion(1,i)=Ar1(i)*al(i);
       Xion(2,i)=Ar2(i)*al(i);
     _od;
     Scap=Scap+ScapZZ;
  endif;
%_SAHA_PE:
  P=CRgas*(XYZA+Xe)*Pl*Tp; -- XYZA==Sum(Yat(i))
  If( LOW ) Then;
     WEgas=0.d0;
     _Do i=1,Natom;
       WEgas=WEgas+AD1(i)*Psum(1,i)*Yat(i)*RXe;
     _od;
  Elseif( HIGH ) Then;
     WEgas=Psum(1,1)*Yat(1)+Psum(Nstagez,2)*Yat(2);
     EZZ=0.D0;
     _Do i=3,Natom;
       EZZ=EZZ+Psum(Nstagez,i)*Yat(i);
     _od;
     WEgas=WEgas+EZZ;
  Else;
     WEgas=Psum(1,1)*AR1(1)*Yal(1);
     sigYal(1)=WEgas;
     _Do i=2,Natom;
       W=(Psum(2,i)*AR2(i)+Psum(1,i)*AR1(I))*Yal(i);
       WEgas=WEgas+W;
       sigYal(i)=W;
     _od;
  Endif;
  Egas=Egas+CRgas*(1.5d0*(XYZA+Xe)*Tp+WEgas);
%_SAHA_DER:
  If(HIGH)Then;
     XeT=XeZMT;
     XePl=XeZMPl;
     ET=ET+CRgas*(1.5D0*(XYZA+Xe+Tp*XeT) );
     EPl=EPl+CRgas*(1.5D0*Tp*XePl );
     ScapT=-ScapZZ*WZMT;
     ScapPl=-ScapZZ*WZMPl;
  elseif(LOW)Then;
      XeT=0.D0;
      _Do i=1,Natom;
        XeT=XeT+Yat(i)*(1.5D0+Psum(1,i)*RTp)*AD1(i);
      _od;
      XeT=0.5d0*XeT*(RXe*RTp);
      XePl=0.5d0*Asum*RXe-Xe;
      XeTl=XeT*RXe;
      DET=0.D0;
      DePl=0.d0;
      ScapT=0.D0;
      ScapPl=0.D0;
      _Do i=1,Natom;
        DET=DET+Yat(i)*(AD1(i)*RXe)*Psum(1,i)
                *((1.5D0+Psum(1,i)*RTp)*RTp-XeTl);
        DEPl=DEPl+Yat(i)*(AD1(i)*RXe)*Psum(1,i);
        ScapT=ScapT+Yat(i)*(AD1(i)*RXe)*RGWR(1,i)
              *((1.5D0+Psum(1,i)*RTp)*RTp-XeTl);
        ScapPl=ScapPl-Yat(i)*(AD1(i)*RXe)*RGWR(1,i);
      _od;
      ET=ET+CRgas*(1.5D0*(XYZA+Xe+Tp*XeT)+DET);
      EPl=EPl+CRgas*(1.5D0*Tp*XePl-DePl*(XePl*RXe+1.d0)); -- dE/dlog(D
      ScapPl=ScapPl*(XePl*RXe+1.D0); -- dScap/dlog(D)
   else;
      alpT=(1.5D0+Psum(1,1)*RTp)*AR1(1)*RTp; -- for fixed  Xe
      DGT=(Yat(1)-Yaldz(1))*alpT*al(1)+XeZMT;
      aldT(1)=alpT;
      _Do i=2,Natom;
        alpT=(((3.D0+Psum(2,i)*RTp)*AR2(i))+
              ((1.5D0+Psum(1,i)*RTp)*AR1(i)))*RTp; -- for fixed  Xe
        dzT= (2.D0*((3.D0+Psum(2,i)*RTp)*AR2(i))+
              ((1.5D0+Psum(1,i)*RTp)*AR1(i)))*RTp;
        DGT=DGT+Yal(i)*dzT-Yaldz(i)*alpT*al(i);
        aldT(i)=alpT;
      _od;
      XeT=DGT/(V*RXe+1.D0);
      XePl=(U+XeZM+XeZMPl)/(V*RXe+1.D0)-Xe;
      XeTl=XeT*RXe;
      sigmT=(aldT(1)-XeTl*AR1(1) )*Psum(1,1);
      DET= Yal(1)*sigmT-sigYal(1)*(aldT(1)-XeTl*AR1(1))*al(1);
      signe=AR1(1)*Psum(1,1);
      DEPl=Yal(1)*signe-sigYal(1)*AR1(1)*al(1);
      ScapT=Yal(1)*RGWR(1,1)*
             (aldT(1)-AR1(1)*((aldT(1)-XeTl*AR1(1))*al(1)+XeTl));
      ScapPl=Yal(1)*RGWR(1,1)*AR1(1)*(AR1(1)*al(1)-1.D0);
      _Do i=2,Natom;
        sigmT=
          (Psum(2,i)*AR2(i))*((3.D0+Psum(2,i)*RTp)*RTp-2.d0*XeTl)+
          (Psum(1,i)*AR1(i))*((1.5D0+Psum(1,i)*RTp)*RTp-XeTl);
        ScapT=ScapT+Yal(i)*(
              ( ((3.D0+Psum(2,i)*RTp)*AR2(i))*RGWR(2,i)*4.D0+
                ((1.5D0+Psum(1,i)*RTp)*AR1(i))*RGWR(1,i) )*RTp
             -(Ar1(i)*Rgwr(1,i)+Ar2(i)*Rgwr(2,i)*4.d0)*
                 (aldT(i)-XeTl*(2.D0*AR2(i)+AR1(i)))*al(i)
             -XeTl*(Ar1(i)*Rgwr(1,i)+Ar2(i)*Rgwr(2,i)*8.d0));
        DET=DET+Yal(i)*sigmT-sigYal(i)*
             (aldT(i)-XeTl*(2.D0*AR2(i)+AR1(i)))*al(i);
        signe=2.d0*AR2(i)*Psum(2,i)+AR1(i)*Psum(1,i);
        DEPl=DEPl+Yal(i)*signe-sigYal(i)*(2.D0*AR2(i)+AR1(i))*al(i);
        ScapPl=ScapPl+Yal(i)*((2.D0*AR2(i)+AR1(i))*al(i)*
                 (Ar1(i)*Rgwr(1,i)+Ar2(i)*Rgwr(2,i)*4.d0)
               -(Ar1(i)*Rgwr(1,i)+Ar2(i)*Rgwr(2,i)*8.d0));
      _od;
      ET=ET+CRgas*(1.5D0*(XYZA+Xe+Tp*XeT)+DET);
      EPl=EPl
       +CRgas*(1.5D0*Tp*XePl-DePl*(XePl*RXe+1.d0)); -- dE/dlog(D)
      ScapT=ScapT-ScapZZ*WZMT;
      ScapPl=ScapPl*(XePl*RXe+1.D0)-ScapZZ*WZMPl; -- dScap/dlog(D)
  endif;
  PPl=PPl+CRgas*(XYZA+Xe+XePl)*Tp;                   -- dP/d(D)
  PT=PT+CRgas*(XYZA+Xe+Tp*XeT)*Pl;
  YZMT=XeZMT/Zf; YZMPl=XeZMPl/Zf;
%_DEGEN:
  ZMean=Zf;
  XeZM=ZMean*YZ;
  YZMean=YZ;
  Scap=Yat(1)*Rgwr(1,1)+Yat(2)*Rgwr(2,2)*4.d0;
  Ye=Yat(1)+2.D0*Yat(2)+XeZM;
  dY=(Pl*Ye)**tret2;
  PSI=Cpsi*Dy*RTp;
  P=CPRESS*(Pl*Ye)*dY+CRgas*(XYZA+Ye/(1.D0+0.4D0*PSI))*Pl*Tp;
  PotInt=(0.5d0*Zf)*(Tpzf+Tpzb);
  Egas=1.5D0*P*RPl;
  If(LST^=0)Then;
    PPl=(5.D0*tret)*CPRESS*Ye*dY+
        CRgas*(XYZA+Ye/(1.D0+0.4D0*PSI))*Tp-
        CRgas*Ye/(1.D0+0.4D0*PSI)**2*(0.4D0*tret2)*PSI*Tp;
    PT=CRgas*(XYZA+Ye/(1.D0+0.4D0*PSI))*Pl+
       CRgas*Ye/(1.D0+0.4D0*PSI)**2*0.4D0*PSI*Pl;
    EPl=1.5D0*PPl-Egas;
    ET =1.5D0*PT*RPl;
    ZMT=0.D0; ZMPl=0.D0;
    YZMT=0.D0;YZMPl=0.D0;
    ScapT=0.D0; ScapPl=0.D0;
  Endif;
  Egas=Egas+CRgas*(YZ*PotInt+Psum(1,1)*Yat(1)+Psum(Nstagez,2)*Yat(2));
  Xion(1,1)=1.D0;
  _Do i=2,Natom;
     Xion(1,i)=0.D0;
     Xion(2,i)=1.D0;
  _od;
%_INTERPOL:
  WW=CWW*LOG(Pl)-CLOW;
  WD=CWW*RPl;
  WP=WW**3*(4.D0-3.D0*WW);  -- WEIGHT
  _CALL @DEGEN;
  Pdeg=P;   -- SAVE ALL OUTPUT
  Edeg=Egas;
  Scapdg=Scap;
  IF(LST^=0)THEN;
    PTdeg=PT; ETdeg=ET; PPldeg=PPl; EPldeg=EPl;
  ENDIF;
  _CALL @SAHA;
--  PSah=P; ESah=Egas; ScapSh=Scap;
  IF(LST^=0)THEN; -- WE NEED NOn-INTERPOLATED VALUES OF P, EGAS ETC.
                  -- SO WE START WITH DERIVATIVES
    PT=PTdeg*WP+PT*(1.D0-WP)
       +(ETdeg-ET)*Pl**2*(12.D0*WW**2*(1.D0-WW)*WD);
    ET=ETdeg*WP+ET*(1.D0-WP);
    PPl=PPLdeg*WP+PPl*(1.D0-WP) -- DP/D(D),  NOT DP/DLOG(D)
        +(Pdeg-P)*(12.D0*WW**2*(1.D0-WW)*WD)
        +(EPLdeg-EPl)*Pl*(12.D0*WW**2*(1.D0-WW)*WD)
        +(Edeg-Egas)*(Pl**2*12.D0*WW*(2.D0-3.D0*WW)*WD**2
                      -12.D0*CWW*WW**2*(1.D0-WW)-- for log IN WP
                    +24.D0*Pl*WW**2*(1.D0-WW)*WD);
    EPl=EPLdeg*WP+EPl*(1.D0-WP)
                 +(Edeg-Egas)*(Pl*12.D0*WW**2*(1.D0-WW)*WD);
    ScapPl=ScapPl*(1.D0-WP)
                 +(Scapdg-Scap)*(Pl*12.D0*WW**2*(1.D0-WW)*WD);
    ScapT=ScapT*(1.D0-WP);
    ZMPl=ZMPl*(1.D0-WP)
                 +(zF-ZMEaN)*(Pl*12.D0*WW**2*(1.D0-WW)*WD);
    ZMT=ZMT*(1.D0-WP);
    YZMPl=YZMPl*(1.D0-WP)
                 +(YZ-YZMEaN)*(Pl*12.D0*WW**2*(1.D0-WW)*WD);
    YZMT=YZMT*(1.D0-WP);
  ENDIF;
  P=Pdeg*WP+P   *(1.D0-WP)
    +(Edeg-Egas)*Pl**2*(12.D0*WW**2*(1.D0-WW)*WD);
  Egas=Edeg*WP+Egas*(1.D0-WP);
  Scap=Scapdg*WP+Scap  *(1.D0-WP);
  Zmean=Zf*WP+Zmean*(1.D0-WP);  --Zmean==Zf in DEGEN
  YZmean=YZ*WP+YZmean*(1.D0-WP);
  Xe=Ye*WP+Xe*(1.D0-WP);
  Psicap=Psi*WP;
%_RADP:
  If(RadP)Then;
    P=P+(RadC*Tp**4)*tret;
    Egas=Egas+(RadC*Tp**4)*RPl;
    If(LST^=0)Then;
        PT=PT+4.D0*(RadC*Tp**3)*tret;
        ET=ET+4.D0*(RadC*Tp**3)*RPl;
        EPl=EPl-(RadC*Tp**4)*RPl;
    Endif;
  Endif;
  If(LST^=0)Then;
      DPE=(EPl+Tp*PT*RPl)*(Pl/P)-1.D0;
      W=(PT/ET)*RPl;
      GAM=(Pl*PPl+W*(Tp*PT))/P;
      DA=W/GAM;
  Endif;
%_VAR:O
--Parameter(itup=50); -- maximum number of iterations
--Parameter(Pionup=6.3151d0); -- maximum ionization potential
  Parameter(tret=1.d0/3.d0);
  Parameter(tret2=2.d0/3.d0);
--Parameter(epsurs=1.d-7, Xeflo=1.d-20);
  Parameter(epsurs=1.d-8, Xeflo=1.d-20);
  Parameter(epslow=1.d-20);
  Dimension Yal(Natom),Yaldz(Natom),
             al(Natom),aldT(Natom),sigYal(Natom),
            AD1(Natom),AD2(Natom),
            AR1(Natom),AR2(Natom);
  Parameter(Nstagez=2);
  Dimension Xion(Nstagez,Natom);
  Logical LOW,HIGH;
  COMMON/NIT/Xelow,Xion,Nit,LOW,HIGH;
  _Include sahaz;
  Data  AD2(1)/0.d0/;
