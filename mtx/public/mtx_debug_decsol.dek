

      subroutine debug_decsol(iop,n,ndim,a,ml,mu,b,ip,lrd,rpar,lid,ipar,ier)
         integer, intent(in) :: iop, n, ndim, lrd, lid, ml, mu
         integer, intent(inout), pointer :: ip(:) ! (n)
         real(dp), intent(inout), pointer :: a(:) ! =(ndim,n)
         real(dp), intent(inout), pointer :: b(:) ! (n)
         real(dp), intent(inout), pointer :: rpar(:) ! (lrd)
         integer, intent(inout), pointer :: ipar(:) ! (lid)
         integer, intent(out) :: ier
         integer :: lout, i, j
         real(dp), pointer :: a2(:,:)
         a2(1:ndim,1:n) => a(1:ndim*n)
         ier = -1
         if (lid < 1) then
            write(*,*) 'debug_decsol expects to find iounit number in ipar_decsol(1).'
         else
            lout = ipar(1)
            if (lout > 0) then
               write(lout,*) n, ndim
               do j=1,n
                  do i=1,ndim
                     write(lout,'(1pe26.16)') a2(i,j)
                  end do
               end do
               ipar(1) = 0 ! only write once
            end if
         end if
      end subroutine debug_decsol


      subroutine debug_decsolc(iop,n,ndim,ar,ai,ml,mu,br,bi,ip,lcd,cpar_decsol,lrd,rpar_decsol,lid,ipar_decsol,ier)
         integer, intent(in) :: iop, n, ndim, lcd, lrd, lid, ml, mu
         integer, intent(inout) :: ip(n)
         real(dp), intent(inout) :: ar(ndim,n), ai(ndim,n)
         real(dp), intent(inout) :: br(n), bi(n)
         complex(dp), intent(inout), pointer :: cpar_decsol(:) ! (lcd)
         real(dp), intent(inout), pointer :: rpar_decsol(:) ! (lrd)
         integer, intent(inout), pointer :: ipar_decsol(:) ! (lid)
         integer, intent(out) :: ier
         ier = -1
      end subroutine debug_decsolc


      subroutine debug_decsolcs(iop,n,nzmax,ia,ja,sar,sai,br,bi,lcd,cpar_decsol,lrd,rpar_decsol,lid,ipar_decsol,ier)
         integer, intent(in) :: iop, n, nzmax, lcd, lrd, lid
         integer, intent(inout) :: ia(n+1), ja(nzmax)
         real(dp), intent(inout) :: sar(nzmax), sai(nzmax)
         real(dp), intent(inout) :: br(n), bi(n)
         complex(dp), intent(inout), pointer :: cpar_decsol(:) ! (lcd)
         real(dp), intent(inout), pointer :: rpar_decsol(:) ! (lrd)
         integer, intent(inout), pointer :: ipar_decsol(:) ! (lid)
         integer, intent(out) :: ier
         ier = -1
      end subroutine debug_decsolcs


      subroutine debug_decsols(iop,n,nzmax,ia,ja,sa,b,lrd,rpar_decsol,lid,ipar_decsol,ier)
         integer, intent(in) :: iop, n, nzmax, lrd, lid
         integer, intent(inout) :: ia(:) ! (n+1)
         integer, intent(inout) :: ja(:) ! (nzmax)
         real(dp), intent(inout) :: sa(:) ! (nzmax)
         real(dp), intent(inout) :: b(:) ! (n)
         real(dp), intent(inout), pointer :: rpar_decsol(:) ! (lrd)
         integer, intent(inout), pointer :: ipar_decsol(:) ! (lid)
         integer, intent(out) :: ier
         ier = -1
      end subroutine debug_decsols
